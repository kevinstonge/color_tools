{"version":3,"sources":["accessories/colorConversion.js","components/ColorPreview.js","components/wheel.js","components/ColorWheel.js","components/HslSliders.js","components/RgbSliders.js","ColorTools.js","serviceWorker.js","index.js"],"names":["rgb2hsl","r","g","b","h","s","l","d","min","max","Math","abs","toFixed","rgb2hex","c","map","item","toString","length","join","toUpperCase","hsl2rgb","x","m","round","hex2rgb","hex","parseInt","substring","hex2hsl","this","apply","Object","toConsumableArray","hsl2hex","ColorPreview","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateCSS","contrastColor","colorData","hsl","cStyle","backgroundColor","color","border","concat","fontWeight","margin","iChange","e","persist","iFocus","target","select","buffer","value","updatePreview","updateColorData","keys","forEach","i","a","console","log","document","querySelector","componentWillUpdate","state","baseColor","cConvert","rgb","_this2","react_default","createElement","id","style","key","htmlFor","type","size","onChange","onFocus","onBlur","Component","cWheel","width","colorCanvas","colorCanvasUI","updateFunction","drawInnerBox","baseHue","arguments","undefined","baseColorHSL","row","topY","bottomY","rowPercent","boxGradient","ctx","createLinearGradient","leftX","rightX","addColorStop","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","drawOuterWheel","segments","theta0","theta1","rad0","PI","rad1","x1","wheelRadius","cos","y1","height","sin","x2","y2","gradient","arc","drawOutput","output","Number","updateSelectedColor","baseColorHEX","ctxUI","textAlign","font","outerWheelThickness","fillStyle","selectorLineWidth","strokeText","textX","textY","fillText","drawSelectors","selectors","wheelSelector","boxSelector","clearRect","selectedColor","externalInput","calculateWheelSelectorPosition","calculateBoxSelectorPosition","getNearestPointInBox","y","getNearestPointOnWheel","atan","mouseData","offsetX","offsetY","xDist","yDist","dist","sqrt","pow","mouseDown","preventDefault","selfInvoked","innerRadius","outerRadius","activeSelector","mouseMove","buttons","mouseUp","position","marginLeft","zIndex","getContext","boxWidth","boxHeight","ceil","init","theta","ColorWheel","updateBaseColor","colorWheel","Fragment","addEventListener","HslSliders","cFocus","colorVar","substr","cChange","nativeEvent","data","newColor","slice","inputType","replace","inputs","indexOf","setSliders","componentDidUpdate","className","name","RgbSliders","baseColorRGB","onInput","ColorTools","textColor","setState","ColorPreview_ColorPreview","ColorWheel_ColorWheel","HslSliders_HslSliders","RgbSliders_RgbSliders","Boolean","window","location","hostname","match","ReactDOM","render","ColorTools_ColorTools","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6670cb71.chunk.js","sourcesContent":["export function rgb2hsl (r,g,b) {\r\n    r=r/255; g=g/255; b=b/255;\r\n    let h,s,l,d,min,max = null;\r\n    max=Math.max(r,g,b);\r\n    min=Math.min(r,g,b);\r\n    d=max-min;\r\n    l=(max+min);\r\n    if (max===r) { h = 60*(((g-b)/d)%6); }\r\n    if (max===g) { h = 60*(((b-r)/d)+2); }\r\n    if (max===b) { h = 60*(((r-g)/d)+4); }\r\n    if (d===0) { h=0; s=0; }\r\n    if (h<0) { h=h+360; }\r\n    if (d!==0) { s=d/(1-Math.abs(l-1)); }\r\n    h = h.toFixed(2);\r\n    s = (s*100).toFixed(2);\r\n    l = (l*50).toFixed(2);\r\n    return [h,s,l];\r\n}\r\nexport function rgb2hex (r, g, b) {\r\n    let c = [r,g,b];\r\n    c = \"#\" + c.map(\r\n        function(item){\r\n            return item.toString(16);\r\n        }).map(\r\n        function(item){\r\n            if(item.length===1){return \"0\" + item;}\r\n            else {return(item);}\r\n        }).join(\"\").toUpperCase();\r\n    return c;\r\n}\r\nexport function hsl2rgb (h,s,l) {\r\n    s=s/100;\r\n    l=l/100;\r\n    let c=(1-Math.abs((2*l)-1))*s;\r\n    let x=c*(1-Math.abs(((h/60)%2)-1));\r\n    let m=l-c/2;\r\n    let r,g,b;\r\n    if (h<60|h===360) {r=c;g=x;b=0;}\r\n    else if (h<120)\t{r=x;g=c;b=0}\r\n    else if (h<180)\t{r=0;g=c;b=x}\r\n    else if (h<240) {r=0;g=x;b=c}\r\n    else if (h<300) {r=x;g=0;b=c}\r\n    else if (h<360)\t{r=c;g=0;b=x}\r\n    r=Math.round((r+m)*255);g=Math.round((g+m)*255);b=Math.round((b+m)*255);\r\n    return [r,g,b];\t\r\n}\r\nexport function hex2rgb (hex) {\r\n    let r = parseInt(hex.substring(1,3),16);\r\n    let g = parseInt(hex.substring(3,5),16);\r\n    let b = parseInt(hex.substring(5,7),16);\r\n    return [r,g,b];\r\n}\r\nexport function hex2hsl (hex) {\r\n    return this.rgb2hsl(...this.hex2rgb(hex));\r\n}\r\nexport function hsl2hex(h,s,l) {\r\n\treturn rgb2hex(...hsl2rgb(h,s,l));\r\n}","import React, { Component } from 'react'\r\nimport * as cConvert from '../accessories/colorConversion';\r\n\r\nexport default class ColorPreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buffer=\"\";\r\n        this.updateColorData();\r\n        this.updateCSS();\r\n    }\r\n    updateColorData() {\r\n        let color = this.props.state.baseColor;\r\n        this.colorData = {\r\n            \"hex\":cConvert.hsl2hex(...color),\r\n            \"hsl\":color,\r\n            \"rgb\":cConvert.hsl2rgb(...color)\r\n        }\r\n    }\r\n    updateCSS = () => {\r\n        let contrastColor = (this.colorData.hsl[2]>45) ? \"black\" : \"white\";\r\n        this.cStyle = {\r\n            backgroundColor:this.colorData.hex,\r\n            color:contrastColor,\r\n            border:`1px solid ${contrastColor}`,\r\n            fontWeight:\"bold\",\r\n            margin:\"0.1em 0.5em\"\r\n        }\r\n    }\r\n    iChange = (e) => {\r\n        e.persist();\r\n    }\r\n\r\n    iFocus = (e) => {\r\n        e.target.select();\r\n        this.buffer = e.target.value;\r\n    }\r\n\r\n    updatePreview = () => {\r\n        this.updateColorData();\r\n        this.updateCSS();\r\n        Object.keys(this.colorData).forEach((e,i,a)=>{\r\n                console.log(this.colorData[e]);\r\n                document.querySelector(`#${e}Input`).value = this.colorData[e];\r\n            }\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"colorOutput\" style={this.cStyle}>\r\n                {Object.keys(this.colorData).map(e=>\r\n                    <p key={e}>\r\n                    <label htmlFor={e}>{e}: </label>\r\n                    <input id={`${e}Input`} type=\"text\" size=\"16\" onChange={this.iChange} onFocus={this.iFocus} onBlur={()=>{this.buffer=\"\"}} style={this.cStyle}/>\r\n                    </p>\r\n                )}\r\n          </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.updatePreview();\r\n    }\r\n    componentWillUpdate = () => {\r\n        this.updatePreview();\r\n    }\r\n}","import * as cConvert from '../accessories/colorConversion';\r\nexport default class cWheel {\r\n    constructor(width,baseColor,colorCanvas,colorCanvasUI,updateFunction) {\r\n        this.baseColorHSL = baseColor;\r\n        this.h = baseColor[0];\r\n        this.s = baseColor[1];\r\n        this.l = baseColor[2];\r\n        this.baseColorHEX = cConvert.hsl2hex(baseColor);\r\n        this.updateSelectedColor = updateFunction;\r\n        this.colorCanvas = colorCanvas;\r\n        this.colorCanvasUI = colorCanvasUI;\r\n        this.width = width;\r\n        this.height = width; //must be a square\r\n        this.colorCanvas.width = this.width;\r\n        this.colorCanvas.height = this.height;\r\n        this.colorCanvasUI.width = this.width;\r\n        this.colorCanvasUI.height = this.height;\r\n        this.colorCanvasUI.style.position = 'relative';\r\n        this.colorCanvasUI.style.marginLeft = `-${this.width}px`;\r\n        this.colorCanvas.style.zIndex = '0';\r\n        this.colorCanvasUI.style.zIndex = '1';\r\n        this.ctx = this.colorCanvas.getContext(\"2d\");\r\n        this.ctxUI = this.colorCanvasUI.getContext(\"2d\");\r\n        this.outerWheelThickness = this.width/15;\r\n        this.ctx.lineWidth = this.outerWheelThickness;\r\n        this.wheelRadius = (this.width/2)-this.outerWheelThickness/2;\r\n        this.innerRadius = this.wheelRadius - this.outerWheelThickness/2;\r\n        this.outerRadius = this.wheelRadius + this.outerWheelThickness/2;\r\n        this.boxWidth = 2*(this.wheelRadius-(this.outerWheelThickness/2))/Math.sqrt(2)-2;\r\n        this.boxHeight = this.boxWidth;\r\n        this.leftX = (this.width/2)-(this.boxWidth/2);\r\n        this.topY = (this.height/2)-(this.boxHeight/2);\r\n        this.rightX = this.leftX+this.boxWidth;\r\n        this.bottomY = (this.height/2)+(this.boxHeight/2);\r\n        this.calculateWheelSelectorPosition(this.baseColorHSL);\r\n        this.calculateBoxSelectorPosition(this.baseColorHSL);\r\n        this.activeSelector = \"wheel\";\r\n        this.selectedColor = this.baseColorHSL; \r\n        this.selectorLineWidth = Math.ceil(this.outerWheelThickness/12);\r\n        this.textX = this.width/2;\r\n        this.textY = this.bottomY + this.outerWheelThickness*1.2;\r\n        this.selfInvoked = false;\r\n        this.init = (() => { \r\n            this.drawOuterWheel();this.drawInnerBox(); this.drawSelectors();\r\n        })();\r\n    };\r\n    calculateBoxSelectorPosition(color) {\r\n        let x = this.leftX + this.boxWidth * this.l/100;\r\n        let y = this.topY + this.boxHeight * this.s/100;\r\n        this.boxSelector = [x,y];\r\n    }\r\n    calculateWheelSelectorPosition(color) {\r\n        let r = this.wheelRadius;\r\n        let theta = color[0]*Math.PI/180;\r\n        let x = r*Math.cos(theta)+(this.width/2);\r\n        let y = -r*Math.sin(theta)+(this.height/2);\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    drawInnerBox = (baseHue=this.baseColorHSL[0]) => {\r\n        for (let row = this.topY; row <= this.bottomY; row++) { \r\n            let rowPercent = 100*(row-this.topY)/(this.bottomY-this.topY);\r\n            let boxGradient = this.ctx.createLinearGradient(this.leftX,row,this.rightX,row);\r\n            let steps = 10; //ten gradient steps produces good balance of performance and accuracy\r\n            for (let i=0; i<=steps; i++) { \r\n                boxGradient.addColorStop(i/steps,`hsla(${baseHue},${rowPercent}%,${100*i/steps}%,1)`);\r\n            }\r\n            this.ctx.strokeStyle = boxGradient;\r\n            this.ctx.lineWidth = 2;\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.leftX,row);\r\n            this.ctx.lineTo(this.rightX,row);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOuterWheel = (segments=12) => { \r\n        for (let i=0; i<segments; i++) {\r\n            let theta0 = i*360/segments;\r\n            let theta1 = (i+1)*360/segments;\r\n            let rad0 = theta0*Math.PI/180 - .01; // - .01 hides the gaps\r\n            let rad1 = theta1*Math.PI/180;\r\n            let x1 = this.wheelRadius*Math.cos(rad0)+(this.width/2); \r\n            let y1 = this.height - (this.wheelRadius*Math.sin(rad0)+(this.height/2)); \r\n            let x2 = this.wheelRadius*Math.cos(rad1)+(this.width/2);\r\n            let y2 = this.height - (this.wheelRadius*Math.sin(rad1)+(this.height/2));\r\n            let gradient = this.ctx.createLinearGradient(x1,y1,x2,y2); \r\n            gradient.addColorStop(0,`hsla(${theta0},100%,50%,1)`);\r\n            gradient.addColorStop(1,`hsla(${theta1},100%,50%,1)`);\r\n            this.ctx.strokeStyle = gradient;\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(this.width/2,this.height/2,this.wheelRadius,2*Math.PI-(rad0),2*Math.PI-(rad1),true);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOutput = (output) => {\r\n        output.forEach((e,i,a)=>a[i]=Number(a[i]).toFixed(2));\r\n        this.updateSelectedColor(output);\r\n        this.baseColorHEX = cConvert.hsl2hex(...output);\r\n        this.ctxUI.textAlign = 'center';\r\n        this.ctxUI.font = `${this.outerWheelThickness}px monospace`;\r\n        this.ctxUI.fillStyle = 'white';\r\n        this.ctxUI.strokeStyle = 'black';\r\n        this.ctxUI.lineWidth = this.selectorLineWidth+1;\r\n        this.ctxUI.strokeText(this.baseColorHEX, this.textX, this.textY);\r\n        this.ctxUI.fillText(this.baseColorHEX, this.textX, this.textY);\r\n    }\r\n    drawSelectors = () => {\r\n        let selectors = [[this.wheelSelector[0],this.wheelSelector[1]],[this.boxSelector[0],this.boxSelector[1]]];\r\n        this.ctxUI.clearRect(0,0,this.width,this.height);\r\n        selectors.forEach(e=> {\r\n            this.ctxUI.moveTo(e[0],e[1]);\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"#252525\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"white\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30-this.selectorLineWidth,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n        });\r\n        this.drawOutput(this.selectedColor);\r\n    }\r\n    externalInput = (color) => {\r\n        //add color format detection: hex/hsl\r\n        //if (color.match(/^#[0-9a-f]{3,6}$/i)) { color = cConvert.hex2hsl(color); }\r\n        this.h = color[0];\r\n        this.s = color[1];\r\n        this.l = color[2];\r\n        this.baseColorHSL = color;\r\n        this.baseColorHEX = cConvert.hsl2hex(color);\r\n        this.selectedColor = color;\r\n        this.calculateWheelSelectorPosition(color);\r\n        this.calculateBoxSelectorPosition(color);\r\n        this.drawInnerBox(this.baseColorHSL[0]);\r\n        this.drawSelectors();\r\n    }\r\n    getNearestPointInBox = (x,y) => {\r\n        if (x<this.leftX) { this.x = this.leftX };\r\n        if (x>this.rightX) { this.x = this.rightX };\r\n        if (y<this.topY) { this.y = this.topY };\r\n        if (y>this.bottomY) { this.y = this.bottomY };\r\n        this.s = 100*(this.y-this.topY)/(this.bottomY-this.topY);\r\n        this.l = 100*(this.x-this.leftX)/(this.rightX-this.leftX);\r\n        this.boxSelector = [this.x,this.y];\r\n    }\r\n    getNearestPointOnWheel = (x,y,d) => {\r\n        this.h = (180/Math.PI)*Math.atan(y/x);\r\n        if (x < 0) { this.h = this.h + 180; }\r\n        if (y < 0) { this.h = this.h + 360; }\r\n        this.h = 360-this.h;\r\n        if (this.h<0) { this.h = 360+this.h }\r\n        if (this.h===360) { this.h = 0; }\r\n        x = (this.width/2) + this.wheelRadius*x/d;\r\n        y = (this.width/2) + this.wheelRadius*y/d;\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    mouseData = (e) => {\r\n        this.x = e.offsetX;\r\n        this.y = e.offsetY;\r\n        this.xDist = this.x - this.width/2;\r\n        this.yDist = this.y - this.height/2;\r\n        this.dist = Math.sqrt(this.xDist**2 + this.yDist**2);\r\n    }\r\n    mouseDown = (e) => {\r\n        e.preventDefault();\r\n        this.selfInvoked = true;\r\n        this.mouseData(e);\r\n        if (this.dist > this.innerRadius && this.dist < this.outerRadius) { \r\n            this.activeSelector = \"wheel\";\r\n            this.mouseMove(e);\r\n        }\r\n        else if (this.x>this.leftX && this.x<this.rightX && this.y>this.topY && this.y<this.bottomY) { \r\n            this.activeSelector = \"box\";\r\n            this.mouseMove(e);\r\n        }\r\n        else { this.activeSelector = null; }\r\n    }\r\n    mouseMove = (e) => {\r\n        if (e.buttons === 0) { return; }\r\n        this.mouseData(e);\r\n        if (this.activeSelector === \"wheel\") {\r\n            this.getNearestPointOnWheel(this.xDist,this.yDist,this.dist);\r\n            this.drawInnerBox(this.h);\r\n            this.selectedColor = [this.h,this.s,this.l];\r\n            this.drawSelectors();\r\n        }\r\n        if (this.activeSelector === \"box\") { \r\n            this.getNearestPointInBox(this.x,this.y);\r\n            this.selectedColor = [this.h,this.s,this.l];\r\n            this.drawSelectors();\r\n        }\r\n    }\r\n    mouseUp = () => {\r\n        this.updateSelectedColor(this.selectedColor);\r\n        this.selfInvoked = false;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport cWheel from './wheel';\r\n//todo: \"copy\"/\"OK\"/\"close\" buttons\r\n//todo: preview box in top left\r\nexport default class ColorWheel extends Component {\r\n\r\n    updateSelectedColor = (color) => { \r\n        if (color === this.props.state.baseColor) { return; }\r\n        this.props.updateBaseColor(color);\r\n    }\r\n    componentDidUpdate() {\r\n        if(this.colorWheel.selfInvoked === false) {\r\n            this.colorWheel.externalInput(this.props.state.baseColor);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <div id=\"canvasContainer\">\r\n                <canvas id=\"colorCanvas\"></canvas>\r\n                <canvas id=\"colorCanvasUI\"></canvas>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n    componentDidMount() {\r\n        let colorCanvas = document.querySelector(\"#colorCanvas\");\r\n        let colorCanvasUI = document.querySelector(\"#colorCanvasUI\");\r\n        this.colorWheel = new cWheel(this.props.state.width,this.props.state.baseColor,colorCanvas,colorCanvasUI,this.updateSelectedColor);\r\n        colorCanvasUI.addEventListener(\"mousedown\",this.colorWheel.mouseDown);\r\n        colorCanvasUI.addEventListener(\"mousemove\",this.colorWheel.mouseMove);\r\n        colorCanvasUI.addEventListener(\"mouseup\",this.colorWheel.mouseUp);\r\n        //add touchevents!\r\n    }\r\n};\r\n\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport default class HslSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {\r\n            \"h\":359.99,\r\n            \"s\":100,\r\n            \"l\":100\r\n        };\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.props.state.baseColor.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") {return;}\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"[dec]\").replace(/\\./g,\"\").replace(\"[dec]\",\".\").replace(/[^\\d.]/g,\"\");\r\n            if (value >= this.inputs[colorVar]) value = this.inputs[colorVar];\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"hsl\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(newColor);\r\n        }\r\n    }\r\n\r\n    setSliders = () => {\r\n        [\"h\",\"s\",\"l\"].forEach((e,i)=>{\r\n            const value = (e===this.buffer[0]) ? this.buffer[1] : this.props.state.baseColor[i];\r\n            document.querySelector(\"#\"+e+\"r\").value = Number(value);\r\n            document.querySelector(\"#\"+e+\"t\").value = value;\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n                <div className=\"colorInputBox\">\r\n                    <p>hue, saturation, luminosity</p>\r\n                {Object.keys(this.inputs).map(e=>\r\n                        <div className=\"colorInputRow\" key={e[0]}>\r\n                        <label htmlFor={`${e}r}`}>{e} </label>\r\n                        <input name={`${e}r`} id={`${e}r`}  type=\"range\" min=\"0\" max={this.inputs[e]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e}t`} min=\"0\" max={this.inputs[e]} size=\"4\" onChange={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </div>\r\n                    )\r\n                }\r\n                </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {rgb2hsl,hsl2rgb} from '../accessories/colorConversion';\r\n\r\nexport default class RgbSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {\r\n            \"r\":255,\r\n            \"g\":255,\r\n            \"b\":255,\r\n        };\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.baseColorRGB.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") {return;}\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"\").replace(/[\\D]/g,\"\");\r\n            if (value >= this.inputs[colorVar]) value = this.inputs[colorVar];\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"rgb\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(rgb2hsl(...newColor));\r\n        }\r\n\r\n    }\r\n\r\n    setSliders = () => {\r\n        this.baseColorRGB = hsl2rgb(...this.props.state.baseColor);\r\n        [\"r\",\"g\",\"b\"].forEach((e,i)=>{\r\n            document.querySelector(\"#\"+e+\"r\").value = this.baseColorRGB[i];\r\n            document.querySelector(\"#\"+e+\"t\").value = this.baseColorRGB[i];\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"colorInputBox\">\r\n            <p>red, green, blue</p>\r\n                {Object.keys(this.inputs).map(e=>\r\n                        <div className=\"colorInputRow\" key={e[0]}>\r\n                        <label htmlFor={`${e}r}`}>{e} </label>\r\n                        <input name={`${e}r`} id={`${e}r`}  type=\"range\" min=\"0\" max={this.inputs[e]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e}t`} min=\"0\" max={this.inputs[e]} size=\"4\" onInput={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport ColorPreview from './components/ColorPreview';\nimport ColorWheel from './components/ColorWheel';\nimport HslSliders from './components/HslSliders';\nimport './ColorTools.css';\nimport RgbSliders from './components/RgbSliders';\nexport default class ColorTools extends Component {\n  constructor(props) {\n    super (props);\n    this.state = { \n      baseColor:[0,100,50],\n      width:300,\n    };\n  }\n  updateBaseColor = (color) => { \n    if (color === this.state.baseColor) { return; }\n    if (color[0] >= 360) { color[0] = 0 }\n    if (color[1] >= 100) { color[1] = 100 }\n    if (color[2] >= 100) { color[2] = 100 }\n    this.textColor = (color[2]>40) ? \"black\" : \"white\";\n    this.setState({baseColor:color});\n  }\n  render() {\n  return (\n    <div id=\"colorToolsFlexContainer\">\n      <div id=\"colorPickers\" style={{width:this.state.width}}>\n        <ColorPreview updateBaseColor={this.updateBaseColor} state={this.state} />\n        <ColorWheel updateBaseColor={this.updateBaseColor} state={this.state} />\n        <HslSliders updateBaseColor={this.updateBaseColor} state={this.state} />\n        <RgbSliders updateBaseColor={this.updateBaseColor} state={this.state} />\n      </div>\n    </div>\n  );\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ColorTools from './ColorTools';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<ColorTools />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}