{"version":3,"sources":["accessories/colorConversion.js","components/ColorPreview.js","components/wheel.js","components/ColorWheel.js","components/HslSliders.js","accessories/cookies.js","components/Harmonic.js","components/Shading.js","components/ColorPalette.js","accessories/copyToClipboard.js","components/RgbSliders.js","ColorTools.js","serviceWorker.js","index.js"],"names":["rgb2hsl","r","g","b","h","s","l","d","min","max","Math","abs","toFixed","rgb2hex","c","map","item","toString","length","join","toUpperCase","hsl2rgb","x","m","round","hex2rgb","hex","concat","parseInt","substring","hex2hsl","apply","Object","toConsumableArray","hsl2hex","hueReset","hue","ColorPreview","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","iChange","e","persist","input","target","value","newColor","colorTest","id","document","querySelector","innerText","updateBaseColor","iFocus","select","buffer","getData","type","colorData","color","state","baseColor","backgroundColor","cConvert","border","updateInputs","keys","forEach","copyColor","elementToCopy","replace","copyIconElement","hslElement","hslElementOriginalValue","hslArray","execCommand","setTimeout","hexInput","hslInput","rgbInput","match","tempColor","filter","Boolean","colorHelp","_this2","react_default","a","createElement","style","key","htmlFor","size","onChange","onFocus","onBlur","role","arei-label","aria-hidden","title","onClick","Component","cWheel","width","colorCanvas","colorCanvasUI","updateFunction","drawInnerBox","baseHue","arguments","undefined","baseColorHSL","row","topY","bottomY","rowPercent","boxGradient","ctx","createLinearGradient","leftX","rightX","i","addColorStop","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","drawOuterWheel","segments","theta0","theta1","rad0","PI","rad1","x1","wheelRadius","cos","y1","height","sin","x2","y2","gradient","arc","drawOutput","output","Number","updateSelectedColor","drawSelectors","selectors","wheelSelector","boxSelector","ctxUI","clearRect","selectorLineWidth","selectedColor","externalInput","baseColorHEX","calculateWheelSelectorPosition","calculateBoxSelectorPosition","getNearestPointInBox","y","getNearestPointOnWheel","atan","mouseData","touches","rect","getBoundingClientRect","targetTouches","pageX","left","pageY","top","offsetX","offsetY","xDist","yDist","dist","sqrt","pow","mouseDown","preventDefault","focus","selfInvoked","innerRadius","outerRadius","activeSelector","mouseMove","buttons","mouseUp","position","marginLeft","zIndex","getContext","outerWheelThickness","boxWidth","boxHeight","ceil","textX","textY","init","theta","ColorWheel","colorWheel","Fragment","tabIndex","outline","addEventListener","passive","HslSliders","cFocus","colorVar","substr","cChange","nativeEvent","data","slice","inputType","inputs","indexOf","setSliders","componentDidUpdate","className","name","setCookie","cname","cvalue","exdays","Date","setTime","getTime","expires","toUTCString","cookie","getCookie","ca","split","charAt","Harmonic","updateState","newState","setState","updateCookie","cookies","JSON","stringify","applyCookie","parse","settings","Palette Mode","Analogous","Complementary","Complementary split","Complementary with split","Tetradic rectangle","Tetradic square","Triadic","Saturation Steps","Luminosity Steps","f","checked","values","globalState","Array","fill","j","saturation","k","luminosity","clipBoardString","copiedFormats","paletteState","paletteBoxClick","Shading","calculateColor","baseSaturation","baseLuminosity","lContrast","sContrast","paletteSize","maxSaturation","maxLuminosity","h0","s0","l0","updateSettings","shadow temperature","highlight temperature","luminosity contrast","saturation contrast","palette size","palette","sphereCSS","clipPath","background","reverse","display","flexWrap","cssColor","ColorPalette","changeMode","mode","changeCopiedFormat","copyString","ctrlKey","str","el","setAttribute","body","appendChild","selected","getSelection","rangeCount","getRangeAt","removeChild","removeAllRanges","addRange","copyToClipboard","Copied format","modes","hsl","rgb","togglePicker","borderBottom","React","updateComponentState","RgbSliders","baseColorRGB","onInput","ColorTools","textColor","picker","pickerCSS","ColorPreview_ColorPreview","ColorWheel_ColorWheel","HslSliders_HslSliders","RgbSliders_RgbSliders","ColorPalette_ColorPalette","window","location","hostname","ReactDOM","render","ColorTools_ColorTools","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0a51bc9.chunk.js","sourcesContent":["export function rgb2hsl (r,g,b) {\r\n    r=r/255; g=g/255; b=b/255;\r\n    let h,s,l,d,min,max = null;\r\n    max=Math.max(r,g,b);\r\n    min=Math.min(r,g,b);\r\n    d=max-min;\r\n    l=(max+min);\r\n    if (max===r) { h = 60*(((g-b)/d)%6); }\r\n    if (max===g) { h = 60*(((b-r)/d)+2); }\r\n    if (max===b) { h = 60*(((r-g)/d)+4); }\r\n    if (d===0) { h=0; s=0; }\r\n    if (h<0) { h=h+360; }\r\n    if (d!==0) { s=d/(1-Math.abs(l-1)); }\r\n    h = h.toFixed(2);\r\n    s = (s*100).toFixed(2);\r\n    l = (l*50).toFixed(2);\r\n    return [h,s,l];\r\n}\r\nexport function rgb2hex (r, g, b) {\r\n    let c = [r,g,b];\r\n    c = \"#\" + c.map(\r\n        function(item){\r\n            return item.toString(16);\r\n        }).map(\r\n        function(item){\r\n            if(item.length===1){return \"0\" + item;}\r\n            else {return(item);}\r\n        }).join(\"\").toUpperCase();\r\n    return c;\r\n}\r\nexport function hsl2rgb (h,s,l) {\r\n    s=s/100;\r\n    l=l/100;\r\n    let c=(1-Math.abs((2*l)-1))*s;\r\n    let x=c*(1-Math.abs(((h/60)%2)-1));\r\n    let m=l-c/2;\r\n    let r,g,b;\r\n    if (h<60|h===360) {r=c;g=x;b=0;}\r\n    else if (h<120)\t{r=x;g=c;b=0}\r\n    else if (h<180)\t{r=0;g=c;b=x}\r\n    else if (h<240) {r=0;g=x;b=c}\r\n    else if (h<300) {r=x;g=0;b=c}\r\n    else if (h<360)\t{r=c;g=0;b=x}\r\n    r=Math.round((r+m)*255);g=Math.round((g+m)*255);b=Math.round((b+m)*255);\r\n    return [r,g,b];\t\r\n}\r\nexport function hex2rgb (hex) {\r\n    hex = (hex[0]===\"#\") ? hex : `#${hex}`;\r\n    let r = parseInt(hex.substring(1,3),16);\r\n    let g = parseInt(hex.substring(3,5),16);\r\n    let b = parseInt(hex.substring(5,7),16);\r\n    return [r,g,b];\r\n}\r\nexport function hex2hsl (hex) {\r\n    return rgb2hsl(...hex2rgb(hex));\r\n}\r\nexport function hsl2hex(h,s,l) {\r\n\treturn rgb2hex(...hsl2rgb(h,s,l));\r\n}\r\nexport function hueReset(hue) {\r\n    while (hue < 0) {\r\n        hue = hue + 360;\r\n    }\r\n    while (hue >= 360) {\r\n        hue = hue - 360;\r\n    }\r\n    return hue;\r\n}\r\n","import React, { Component } from 'react'\r\nimport * as cConvert from '../accessories/colorConversion';\r\nimport '../components/ColorPreview.css';\r\n\r\nexport default class ColorPreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buffer=[];\r\n        this.colorData={\r\n            \"hexInput\":()=>cConvert.hsl2hex(...this.props.state.baseColor),\r\n            \"hslInput\":()=>this.props.state.baseColor.join(\", \"),\r\n            \"rgbInput\":()=>cConvert.hsl2rgb(...this.props.state.baseColor).join(\", \")\r\n        };\r\n        this.colorTest={\r\n            \"hexInput\":(input)=>{\r\n                return (input.match(/^#{0,1}[0-9a-f]{6}$/i)) ? cConvert.hex2hsl(input) : null;\r\n            },\r\n            \"hslInput\":(input)=>{\r\n                let tempColor = input.match(/(\\d*\\.{0,1}\\d*)/g);\r\n                tempColor = (tempColor) ? tempColor.filter(Boolean) : \"\"; \r\n                if (tempColor.length===3 && tempColor[0]<360 && tempColor[1]<=100 && tempColor[2]<=100) {\r\n                    return [tempColor[0],tempColor[1],tempColor[2]];\r\n                }\r\n            },\r\n            \"rgbInput\":(input)=>{\r\n                let tempColor = input.match(/\\d{1,3}/g);\r\n                tempColor = (tempColor) ? tempColor.filter(Boolean) : \"\";\r\n                if (tempColor.length===3 && tempColor[0]<=255 && tempColor[1]<=255 && tempColor[2]<=255) {\r\n                    return cConvert.rgb2hsl(tempColor[0],tempColor[1],tempColor[2]);\r\n                }\r\n            }\r\n        }\r\n        this.colorHelp={\r\n            \"hexInput\":\"enter six-digit hexidecimal values with no spaces,\\n\\\"#\\\" prefix is optional\",\r\n            \"hslInput\":\"enter three values separated by spaces or commas,\\nfirst value is hue and must be less than 360,\\nsecond value is saturation and must be less than or equal to 100,\\nthird value is luminosity and must be less than or equal to 100.\\nDecimals values can be used\",\r\n            \"rgbInput\":\"enter three values separated by spaces or commas,\\neach value must be less than or equal to 255\"\r\n        }\r\n    } \r\n    iChange = (e) => {\r\n        e.persist();\r\n        let input = e.target.value;\r\n        let newColor = this.colorTest[e.target.id](input);\r\n        if (newColor) {\r\n            document.querySelector(`#${e.target.id}Help`).innerText = \"❔\";\r\n            this.props.updateBaseColor(newColor);\r\n        }\r\n        else {\r\n            document.querySelector(`#${e.target.id}Help`).innerText = \"❓\";\r\n        }\r\n\r\n    }\r\n    iFocus = (e) => {\r\n        e.target.select();\r\n        this.buffer = [e.target.id,e.target.value];\r\n    }\r\n\r\n    getData = (type) => { \r\n        if (typeof this.colorData[type] === \"function\") { return this.colorData[type]() }\r\n        if (type === \"style\") {\r\n            let color = (this.props.state.baseColor[2]>45)?\"black\":\"white\"\r\n            return ({\r\n                backgroundColor:cConvert.hsl2hex(...this.props.state.baseColor),\r\n                color:color,\r\n                border:`1px solid ${color}`\r\n            });\r\n        }\r\n    }\r\n    updateInputs = () => {\r\n        Object.keys(this.colorData).forEach(e=>{\r\n            if (this.buffer[0]!==e) {\r\n                document.querySelector(`#${e}`).value = this.getData(e);\r\n                document.querySelector(`#${e}Help`).innerText = \"❔\";\r\n            }\r\n        })\r\n    }\r\n    copyColor = (e) => {\r\n        let elementToCopy = `#${e.target.id.replace(\"Copy\",\"\")}`;\r\n        let copyIconElement = `#${e.target.id}`;\r\n        if (elementToCopy[2] === \"s\") {\r\n            let hslElement = document.querySelector(elementToCopy);\r\n            let hslElementOriginalValue = hslElement.value;\r\n            let hslArray = this.colorTest[\"hslInput\"](hslElement.value);\r\n            hslElement.value = `${hslArray[0]},${hslArray[1]}%,${hslArray[2]}%`;\r\n            hslElement.select();\r\n            document.execCommand(\"copy\");\r\n            hslElement.value = hslElementOriginalValue;\r\n        }\r\n        else {\r\n            document.querySelector(elementToCopy).select();\r\n            document.execCommand(\"copy\");\r\n        }\r\n        document.querySelector(copyIconElement).innerText = \"✔️\";\r\n        setTimeout(()=>{document.querySelector(copyIconElement).innerText = \"📋\"},500);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div id=\"colorOutput\" style={this.getData(\"style\")}>\r\n                {Object.keys(this.colorData).map(e=>\r\n                    <p key={e}>\r\n                    <label htmlFor={e}>{e.replace(\"Input\",\":\")} \r\n                    <input id={e} type=\"text\" size=\"16\" onChange={this.iChange} onFocus={this.iFocus} onBlur={()=>{this.buffer=[]}} style={this.getData(\"style\")} />\r\n                    <span role=\"img\" arei-label=\"help\" aria-hidden=\"true\" id={`${e}Help`} title={this.colorHelp[e]}>❔</span>\r\n                    <span role=\"img\" arei-label=\"copy\" aria-hidden=\"true\" id={`${e}Copy`} title=\"copy\" onClick={this.copyColor}>📋</span>\r\n                    </label>\r\n                    </p>\r\n                )}\r\n          </div>\r\n          </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.updateInputs();\r\n    }\r\n    componentDidUpdate() {\r\n        this.updateInputs();\r\n    }\r\n}","import * as cConvert from '../accessories/colorConversion';\r\nexport default class cWheel {\r\n    constructor(width,baseColor,colorCanvas,colorCanvasUI,updateFunction) {\r\n        this.baseColorHSL = baseColor;\r\n        this.h = baseColor[0];\r\n        this.s = baseColor[1];\r\n        this.l = baseColor[2];\r\n        this.baseColorHEX = cConvert.hsl2hex(baseColor);\r\n        this.updateSelectedColor = updateFunction;\r\n        this.colorCanvas = colorCanvas;\r\n        this.colorCanvasUI = colorCanvasUI;\r\n        this.width = width;\r\n        this.height = width; //must be a square\r\n        this.colorCanvas.width = this.width;\r\n        this.colorCanvas.height = this.height;\r\n        this.colorCanvasUI.width = this.width;\r\n        this.colorCanvasUI.height = this.height;\r\n        this.colorCanvasUI.style.position = 'relative';\r\n        this.colorCanvasUI.style.marginLeft = `-${this.width}px`;\r\n        this.colorCanvas.style.zIndex = '0';\r\n        this.colorCanvasUI.style.zIndex = '1';\r\n        this.ctx = this.colorCanvas.getContext(\"2d\");\r\n        this.ctxUI = this.colorCanvasUI.getContext(\"2d\");\r\n        this.outerWheelThickness = this.width/15;\r\n        this.ctx.lineWidth = this.outerWheelThickness;\r\n        this.wheelRadius = (this.width/2)-this.outerWheelThickness/2;\r\n        this.innerRadius = this.wheelRadius - this.outerWheelThickness/2;\r\n        this.outerRadius = this.wheelRadius + this.outerWheelThickness/2;\r\n        this.boxWidth = 2*(this.wheelRadius-(this.outerWheelThickness/2))/Math.sqrt(2)-2;\r\n        this.boxHeight = this.boxWidth;\r\n        this.leftX = (this.width/2)-(this.boxWidth/2);\r\n        this.topY = (this.height/2)-(this.boxHeight/2);\r\n        this.rightX = this.leftX+this.boxWidth;\r\n        this.bottomY = (this.height/2)+(this.boxHeight/2);\r\n        this.calculateWheelSelectorPosition(this.baseColorHSL);\r\n        this.calculateBoxSelectorPosition(this.baseColorHSL);\r\n        this.activeSelector = \"wheel\";\r\n        this.selectedColor = this.baseColorHSL; \r\n        this.selectorLineWidth = Math.ceil(this.outerWheelThickness/12);\r\n        this.textX = this.width/2;\r\n        this.textY = this.bottomY + this.outerWheelThickness*1.2;\r\n        this.selfInvoked = false;\r\n        this.init = (() => { \r\n            this.drawOuterWheel();this.drawInnerBox(); this.drawSelectors();\r\n        })();\r\n    };\r\n    calculateBoxSelectorPosition(color) {\r\n        let x = this.leftX + this.boxWidth * this.l/100;\r\n        let y = this.topY + this.boxHeight * this.s/100;\r\n        this.boxSelector = [x,y];\r\n    }\r\n    calculateWheelSelectorPosition(color) {\r\n        let r = this.wheelRadius;\r\n        let theta = color[0]*Math.PI/180;\r\n        let x = r*Math.cos(theta)+(this.width/2);\r\n        let y = -r*Math.sin(theta)+(this.height/2);\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    drawInnerBox = (baseHue=this.baseColorHSL[0]) => {\r\n        for (let row = this.topY; row <= this.bottomY; row+=3) { \r\n            let rowPercent = 100*(row-this.topY)/(this.bottomY-this.topY);\r\n            let boxGradient = this.ctx.createLinearGradient(this.leftX,row,this.rightX,row);\r\n            let steps = 2; \r\n            for (let i=0; i<=steps; i++) { \r\n                boxGradient.addColorStop(i/steps,`hsla(${baseHue},${rowPercent}%,${100*i/steps}%,1)`);\r\n            }\r\n            this.ctx.strokeStyle = boxGradient;\r\n            this.ctx.lineWidth = 4; //using 4 for width and 3 for the increment helps performance without sacrificing appearance\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.leftX,row);\r\n            this.ctx.lineTo(this.rightX,row);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOuterWheel = (segments=12) => { \r\n        for (let i=0; i<segments; i++) {\r\n            let theta0 = i*360/segments;\r\n            let theta1 = (i+1)*360/segments;\r\n            let rad0 = theta0*Math.PI/180 - .01; // - .01 hides the gaps\r\n            let rad1 = theta1*Math.PI/180;\r\n            let x1 = this.wheelRadius*Math.cos(rad0)+(this.width/2); \r\n            let y1 = this.height - (this.wheelRadius*Math.sin(rad0)+(this.height/2)); \r\n            let x2 = this.wheelRadius*Math.cos(rad1)+(this.width/2);\r\n            let y2 = this.height - (this.wheelRadius*Math.sin(rad1)+(this.height/2));\r\n            let gradient = this.ctx.createLinearGradient(x1,y1,x2,y2); \r\n            gradient.addColorStop(0,`hsla(${theta0},100%,50%,1)`);\r\n            gradient.addColorStop(1,`hsla(${theta1},100%,50%,1)`);\r\n            this.ctx.strokeStyle = gradient;\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(this.width/2,this.height/2,this.wheelRadius,2*Math.PI-(rad0),2*Math.PI-(rad1),true);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOutput = (output) => {\r\n        output.forEach((e,i,a)=>a[i]=Number(a[i]).toFixed(2));\r\n        this.updateSelectedColor(output);\r\n    }\r\n    drawSelectors = () => {\r\n        let selectors = [[this.wheelSelector[0],this.wheelSelector[1]],[this.boxSelector[0],this.boxSelector[1]]];\r\n        this.ctxUI.clearRect(0,0,this.width,this.height);\r\n        selectors.forEach(e=> {\r\n            this.ctxUI.moveTo(e[0],e[1]);\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"#252525\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"white\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30-this.selectorLineWidth,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n        });\r\n        this.drawOutput(this.selectedColor);\r\n    }\r\n    externalInput = (color) => {\r\n        this.h = color[0];\r\n        this.s = color[1];\r\n        this.l = color[2];\r\n        this.baseColorHSL = color;\r\n        this.baseColorHEX = cConvert.hsl2hex(color);\r\n        this.selectedColor = color;\r\n        this.calculateWheelSelectorPosition(color);\r\n        this.calculateBoxSelectorPosition(color);\r\n        this.drawInnerBox(this.baseColorHSL[0]);\r\n        this.drawSelectors();\r\n    }\r\n    getNearestPointInBox = (x,y) => {\r\n        if (x<this.leftX) { this.x = this.leftX };\r\n        if (x>this.rightX) { this.x = this.rightX };\r\n        if (y<this.topY) { this.y = this.topY };\r\n        if (y>this.bottomY) { this.y = this.bottomY };\r\n        this.s = 100*(this.y-this.topY)/(this.bottomY-this.topY);\r\n        this.l = 100*(this.x-this.leftX)/(this.rightX-this.leftX);\r\n        this.boxSelector = [this.x,this.y];\r\n    }\r\n    getNearestPointOnWheel = (x,y,d) => {\r\n        this.h = (180/Math.PI)*Math.atan(y/x);\r\n        if (x < 0) { this.h = this.h + 180; }\r\n        if (y < 0) { this.h = this.h + 360; }\r\n        this.h = 360-this.h;\r\n        if (this.h<0) { this.h = 360+this.h }\r\n        if (this.h===360) { this.h = 0; }\r\n        x = (this.width/2) + this.wheelRadius*x/d;\r\n        y = (this.width/2) + this.wheelRadius*y/d;\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    mouseData = (e) => {\r\n        if (e.touches) {\r\n            let rect = e.target.getBoundingClientRect();\r\n            this.x = e.targetTouches[0].pageX - rect.left;\r\n            this.y = e.targetTouches[0].pageY - rect.top;\r\n        }\r\n        else {\r\n            this.x = e.offsetX;\r\n            this.y = e.offsetY;\r\n        }\r\n        this.xDist = this.x - this.width/2;\r\n        this.yDist = this.y - this.height/2;\r\n        this.dist = Math.sqrt(this.xDist**2 + this.yDist**2);\r\n    }\r\n    mouseDown = (e) => {\r\n        e.preventDefault();\r\n        document.querySelector(\"#colorCanvasUI\").focus();\r\n        this.selfInvoked = true;\r\n        this.mouseData(e);\r\n        if (this.dist > this.innerRadius && this.dist < this.outerRadius) { \r\n            this.activeSelector = \"wheel\";\r\n            this.mouseMove(e);\r\n        }\r\n        else if (this.x>this.leftX && this.x<this.rightX && this.y>this.topY && this.y<this.bottomY) { \r\n            this.activeSelector = \"box\";\r\n            this.mouseMove(e);\r\n        }\r\n        else { this.activeSelector = null; }\r\n    }\r\n    mouseMove = (e) => {\r\n        if (e.buttons === 0 || this.activeSelector === \"null\") { return; }\r\n        this.mouseData(e);\r\n        if (this.activeSelector === \"wheel\") {\r\n            this.getNearestPointOnWheel(this.xDist,this.yDist,this.dist);\r\n            this.drawInnerBox(this.h);\r\n        }\r\n        if (this.activeSelector === \"box\") { \r\n            this.getNearestPointInBox(this.x,this.y);\r\n        }\r\n        this.selectedColor = [this.h,this.s,this.l];\r\n        this.drawSelectors();\r\n    }\r\n    mouseUp = () => {\r\n        this.updateSelectedColor(this.selectedColor);\r\n        this.activeSelector = null;\r\n        this.selfInvoked = false;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport cWheel from './wheel';\r\n//todo: \"copy\"/\"OK\"/\"close\" buttons\r\n//todo: preview box in top left\r\nexport default class ColorWheel extends Component {\r\n\r\n    updateSelectedColor = (color) => { \r\n        if (color === this.props.state.baseColor) { return; }\r\n        this.props.updateBaseColor(color);\r\n    }\r\n    componentDidUpdate() {\r\n        if(this.colorWheel.selfInvoked === false) {\r\n            this.colorWheel.externalInput(this.props.state.baseColor);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <div id=\"canvasContainer\">\r\n                <canvas id=\"colorCanvas\"></canvas>\r\n                <canvas id=\"colorCanvasUI\" tabIndex=\"1\" style={{outline:\"none\"}}></canvas>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n    componentDidMount() {\r\n        let colorCanvas = document.querySelector(\"#colorCanvas\");\r\n        let colorCanvasUI = document.querySelector(\"#colorCanvasUI\");\r\n        this.colorWheel = new cWheel(this.props.state.width,this.props.state.baseColor,colorCanvas,colorCanvasUI,this.updateSelectedColor);\r\n        colorCanvasUI.addEventListener(\"mousedown\",this.colorWheel.mouseDown);\r\n        colorCanvasUI.addEventListener(\"mousemove\",this.colorWheel.mouseMove);\r\n        colorCanvasUI.addEventListener(\"mouseup\",this.colorWheel.mouseUp);\r\n        colorCanvasUI.addEventListener(\"touchstart\",this.colorWheel.mouseDown,{ passive: false });\r\n        colorCanvasUI.addEventListener(\"touchmove\",this.colorWheel.mouseMove,{ passive: false });\r\n        colorCanvasUI.addEventListener(\"touchend\",this.colorWheel.mouseUp);\r\n\r\n    }\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport '../components/colorSliders.css';\r\n\r\nexport default class HslSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {\r\n            \"h\":359.99,\r\n            \"s\":100,\r\n            \"l\":100\r\n        };\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.props.state.baseColor.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") {return;}\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"[dec]\").replace(/\\./g,\"\").replace(\"[dec]\",\".\").replace(/[^\\d.]/g,\"\");\r\n            if (value >= this.inputs[colorVar]) value = this.inputs[colorVar];\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"hsl\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(newColor);\r\n        }\r\n    }\r\n\r\n    setSliders = () => {\r\n        [\"h\",\"s\",\"l\"].forEach((e,i)=>{\r\n            const value = (e===this.buffer[0]) ? this.buffer[1] : this.props.state.baseColor[i];\r\n            document.querySelector(`#${e}r`).value = Number(value);\r\n            document.querySelector(`#${e}t`).value = value;\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n                <div className=\"colorInputBox\">\r\n                    <p>hue, saturation, luminosity</p>\r\n                {Object.keys(this.inputs).map(e=>\r\n                        <div className=\"colorInputRow\" key={e[0]}>\r\n                        <label htmlFor={`${e}t`}>{e} \r\n                        <input name={`${e}t`} id={`${e}r`}  type=\"range\" min=\"0\" max={this.inputs[e]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e}t`} min=\"0\" max={this.inputs[e]} size=\"4\" onChange={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </label>\r\n                        </div>\r\n                    )\r\n                }\r\n                </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","export function setCookie(cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\"+d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n\r\nexport function getCookie(cname) {\r\n    var name = cname + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for(var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) === ' ') {\r\n        c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) === 0) {\r\n        return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","import React, { Component } from 'react'\r\nimport {hueReset} from '../accessories/colorConversion';\r\nimport * as cookies from '../accessories/cookies';\r\n\r\n\r\nexport default class Harmonic extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.settings = {\r\n            \"Palette Mode\": {\r\n                type: \"list\",\r\n                \"Analogous\": [0,30,330],\r\n                \"Complementary\": [0,180],\r\n                \"Complementary split\": [0,150,210],\r\n                \"Complementary with split\": [0,150,180,210],\r\n                \"Tetradic rectangle\": [0,30,60,210,240],\r\n                \"Tetradic square\": [0,90,180,270],\r\n                \"Triadic\": [0,120,240],\r\n                // \"Custom\": []\r\n            },\r\n            \"Saturation Steps\": {\r\n                type: \"range\",\r\n                min: 1,\r\n                max: 7\r\n            },\r\n            \"Luminosity Steps\": {\r\n                type: \"range\",\r\n                min: 1,\r\n                max: 7\r\n            }\r\n        }\r\n        this.state = {\r\n            \"Palette Mode\": \"Analogous\",\r\n            \"Saturation Steps\": 4,\r\n            \"Luminosity Steps\": 4,\r\n        }\r\n    }\r\n    updateState = (e) => {\r\n        e.persist();\r\n        let newState = this.state;\r\n        let value = e.target.value;\r\n        if (value.match(/\\d+/g)) { value = Number(value) }\r\n        newState[e.target.name] = value;\r\n        this.setState(newState);\r\n        this.updateCookie();\r\n    }\r\n    updateCookie = () => {\r\n        cookies.setCookie(\"Harmonic\",JSON.stringify(this.state),1);\r\n    }\r\n\r\n    applyCookie = () => {\r\n        let cookie = cookies.getCookie(\"Harmonic\");\r\n        (cookie) ? this.setState(JSON.parse(cookie)) : this.updateCookie();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>harmonic color palettes</h3>\r\n                <div className=\"paletteSettings\">\r\n                    {Object.keys(this.state).map(e=>\r\n                        <div key={`set${e}`} className=\"paletteSetting\">\r\n                        <span className=\"paletteSettingLabel\">\r\n                            <span className=\"paletteSettingLabelName\">{e}</span>\r\n                            <span className=\"paletteSettingLabelValue\">\r\n                                {(Number(this.state[e])) ? `(${this.state[e]})` : \"\" }\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"paletteSettingInputBlock\">\r\n                            {(this.settings[e].type === \"list\") ? \r\n                                Object.keys(this.settings[e]).map((f,i)=>{\r\n                                    if (i===0) { return null }\r\n                                    else { \r\n                                        return (\r\n                                            <span key={f} className=\"paletteInputRadioBlock\">\r\n                                                <input \r\n                                                    id={f} \r\n                                                    name={e} \r\n                                                    value={f} \r\n                                                    type=\"radio\" \r\n                                                    onChange={this.updateState}\r\n                                                    checked={(f===this.state[e]) ? true : false}\r\n                                                />\r\n                                                <label key={f} htmlFor={f} className=\"paletteInputRadio\">{f}</label>\r\n                                            </span>\r\n                                        );\r\n                                    }\r\n                                })\r\n                                : \r\n                                <React.Fragment>\r\n                                    <span className=\"paletteInputRangeBlock\">\r\n\r\n                                    <input \r\n                                        type=\"range\" \r\n                                        name={e} \r\n                                        min={this.settings[e][\"min\"]} \r\n                                        max={this.settings[e][\"max\"]} \r\n                                        value={this.state[e]} \r\n                                        onChange={this.updateState}\r\n                                    />\r\n                                    </span>\r\n                                </React.Fragment>\r\n                            }\r\n                        </span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"paletteContainer\">\r\n                    {Object.values(this.settings[\"Palette Mode\"][this.state[\"Palette Mode\"]]).map((h,i)=>{\r\n                        let hue = hueReset(Number(this.props.globalState.baseColor[0])+h).toFixed(2);\r\n                        return (\r\n                        <div key={`h${i}`} className=\"paletteBlock\">\r\n                        \r\n                        {Array(this.state[\"Saturation Steps\"]).fill(\"0\").map((s,j)=>{\r\n                            let saturation = Number(100*(j+1)/this.state[\"Saturation Steps\"]).toFixed(2);\r\n                            return (\r\n                            <div key={`h${i}s${j}`} className=\"paletteRow\">\r\n                                \r\n                                {Array(this.state[\"Luminosity Steps\"]).fill(\"0\").map((l,k)=> {\r\n                                    let luminosity = Number(100*(k+1)/(1+this.state[\"Luminosity Steps\"])).toFixed(2);\r\n                                    let clipBoardString = this.props.copiedFormats[this.props.paletteState[\"Copied format\"]]([hue,saturation,luminosity]);\r\n                                    return(<div \r\n                                        key={`h${i}s${j}l${k}`}\r\n                                        className=\"paletteBox\"\r\n                                        style={{backgroundColor:`hsl(${hue},${saturation}%,${luminosity}%)`}}\r\n                                        title={`click to copy:\\n${clipBoardString}`}\r\n                                        onClick={(e)=>{this.props.paletteBoxClick(e,clipBoardString,[hue,saturation,luminosity])}}\r\n                                    >\r\n                                    </div>);\r\n                                })}\r\n\r\n                            </div>\r\n                            );    \r\n                        })}\r\n                        \r\n                        </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount () {\r\n        this.applyCookie();\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {hueReset} from '../accessories/colorConversion';\r\nimport * as cookies from '../accessories/cookies';\r\n\r\n\r\nexport default class Shading extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            // \"setting\":[min,max,current/default]\r\n            \"shadow temperature\":[-50,50,-20],\r\n            \"highlight temperature\":[-50,50,20],\r\n            \"luminosity contrast\": [0,10,7],\r\n            \"saturation contrast\": [0,10,7],\r\n            \"palette size\": [4,100,100],\r\n        }\r\n    }\r\n    calculateColor = (i) => {\r\n        let baseColor = this.props.globalState.baseColor;\r\n        let baseHue = Number(baseColor[0]);\r\n        let baseSaturation = Number(baseColor[1]);\r\n        let baseLuminosity = Number(baseColor[2]);\r\n        let lContrast = this.state[\"luminosity contrast\"][2];\r\n        let sContrast = this.state[\"saturation contrast\"][2];\r\n        let paletteSize = this.state[\"palette size\"][2];\r\n        let maxSaturation = this.state[\"saturation contrast\"][1];\r\n        let maxLuminosity = this.state[\"luminosity contrast\"][1]\r\n\r\n        let h0 = baseHue + this.state[\"shadow temperature\"][2] * ((baseHue >=0 && baseHue < 180) ? -1 : 1);\r\n        let h1  = baseHue + this.state[\"highlight temperature\"][2] * ((baseHue >=0 && baseHue < 180) ? -1 : 1);\r\n        let h = h0 + ((h1-h0)*i/this.state[\"palette size\"][2])\r\n\r\n        let s0 = baseSaturation - baseSaturation * (sContrast/maxSaturation);\r\n        let s1 = baseSaturation + (100-baseSaturation) * (sContrast/maxSaturation);\r\n        let s = s0 + ((s1-s0)*i/paletteSize);\r\n\r\n        let l0 = baseLuminosity - baseLuminosity * (lContrast/maxLuminosity);\r\n        let l1 = baseLuminosity + (100-baseLuminosity) * (lContrast/maxLuminosity);\r\n        let l = l0 + ((l1-l0)*i/paletteSize);\r\n\r\n        return [hueReset(h).toFixed(2),s.toFixed(2),l.toFixed(2)];\r\n    }\r\n    updateSettings = (e) => {\r\n        e.persist();\r\n        let newState = this.state;\r\n        newState[e.target.name][2] = Number(e.target.value);\r\n        this.setState(newState);\r\n        this.updateCookie();\r\n    }\r\n    updateCookie = () => {\r\n        cookies.setCookie(\"Shading\",JSON.stringify(this.state),1);\r\n    }\r\n\r\n    applyCookie = () => {\r\n        let cookie = cookies.getCookie(\"Shading\");\r\n        (cookie) ? this.setState(JSON.parse(cookie)) : this.updateCookie();\r\n    }\r\n    render() {\r\n        let paletteSize = this.state[\"palette size\"][2];\r\n        let palette = new Array(paletteSize);\r\n        palette = palette.fill(\"0\").map((e,i,a)=>this.calculateColor(i));\r\n        // let shadingGradient = \r\n        //     `linear-gradient(to right, \r\n        //         ${palette.map(e=>`hsl(${e[0]},${e[1]}%,${e[2]}%)`)}\r\n        // )`;\r\n        let sphereCSS = {\r\n            width:\"200px\",\r\n            height:\"200px\",\r\n            clipPath:\"circle()\",\r\n            background:`radial-gradient(\r\n                60% 60% at 40% 40%,\r\n                ${palette.map(e=>`hsl(${e[0]},${e[1]}%,${e[2]}%)`).reverse()}\r\n            )`\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <h3>shading color palette</h3>\r\n                <div className=\"paletteSettings\">\r\n                    {Object.keys(this.state).map(e=>{\r\n                        return(\r\n                            <div className=\"paletteSetting\" key={e}>\r\n                                <span className=\"paletteSettingLabel\">\r\n                                    <span className=\"paletteSettingLabelName\">{e}</span>\r\n                                    <span className=\"paletteSettingLabelValue\">({this.state[e][2]})</span>\r\n                                </span>\r\n                                <span className=\"paletteInputRangeBlock\">\r\n                                <input \r\n                                    type=\"range\" \r\n                                    min={this.state[e][0]} \r\n                                    max={this.state[e][1]} \r\n                                    value={this.state[e][2]} \r\n                                    title={this.state[e][2]}\r\n                                    onChange={this.updateSettings} \r\n                                    name={e}>\r\n                                </input>\r\n                                </span>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"paletteContainer\">\r\n                    <div className=\"paletteBlock\">\r\n                        <div className=\"paletteRow\" style={{display:'flex',flexWrap:'wrap',width:'21em'}}>\r\n                            {palette.map((e,i)=>{\r\n                                let color = e;\r\n                                let clipBoardString = this.props.copiedFormats[this.props.paletteState[\"Copied format\"]]([color[0],color[1],color[2]]);\r\n                                let cssColor = `hsl(${color[0]},${color[1]}%,${color[2]}%)`;\r\n                                return(\r\n                                    <div \r\n                                        className=\"paletteBox\"\r\n                                        key={i}\r\n                                        style={{backgroundColor:cssColor}}\r\n                                        title={`click to copy:\\n${clipBoardString}`}\r\n                                        onClick={(e)=>{this.props.paletteBoxClick(e,clipBoardString,[color[0],color[1],color[2]])}}\r\n                                    >\r\n                                    </div>\r\n                                );\r\n                            }) }\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* previews below - suggestion: choose ONE to keep cpu usage lower */}\r\n                    {/* linear gradient preview using css */}\r\n                    {/* <div className=\"paletteBlock\">\r\n                        <div style={{\r\n                            background:shadingGradient,\r\n                            width: \"200px\",\r\n                            height: \"200px\"\r\n                        }}>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* radial gradient preview using css */}\r\n                    <div className=\"paletteBlock\">\r\n                        <div style={sphereCSS}>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    componentDidMount () {\r\n        this.applyCookie();\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Harmonic from './Harmonic';\r\nimport Shading from './Shading';\r\n// import Contrast from './Contrast';\r\nimport copyToClipboard from '../accessories/copyToClipboard';\r\nimport {hsl2hex, hsl2rgb} from '../accessories/colorConversion';\r\nimport * as cookies from '../accessories/cookies';\r\nimport './ColorPalette.css';\r\n\r\nexport default class ColorPalette extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            mode: \"Harmonic\",\r\n            \"Copied format\": \"hex\"\r\n        }\r\n        this.modes = {\r\n            \"Harmonic\" : Harmonic,\r\n            \"Shading\" : Shading,\r\n            // \"Contrast\" : Contrast\r\n        }\r\n        this.copiedFormats = {\r\n            \"hex\":(color)=>{return hsl2hex(...color)},\r\n            \"hsl\":(color)=>{return `${color[0]},${color[1]}%,${color[2]}%`},\r\n            \"rgb\":(color)=>{return hsl2rgb(...color)},\r\n        }\r\n    }\r\n    changeMode = (e) => {\r\n        let newState = this.state;\r\n        newState.mode = e.target.id.replace(\"paletteMode\",\"\");\r\n        this.setState(newState);\r\n        this.updateCookie();\r\n    }\r\n\r\n    updateCookie = () => {\r\n        cookies.setCookie(\"ColorPalette\",JSON.stringify(this.state),1);\r\n    }\r\n\r\n    applyCookie = () => {\r\n    let cookie = cookies.getCookie(\"ColorPalette\");\r\n    (cookie) ? this.setState(JSON.parse(cookie)) : this.updateCookie();\r\n    }\r\n\r\n    changeCopiedFormat = (e) => {\r\n        let newState = this.state;\r\n        newState[\"Copied format\"] = e.target.id.replace(\"copiedFormat\",\"\");\r\n        this.setState(newState);\r\n        this.updateCookie();\r\n    }\r\n\r\n    paletteBoxClick = (e,copyString,hslArray) => {\r\n        e.persist();\r\n        if (e.ctrlKey) {\r\n            this.props.updateBaseColor(hslArray);\r\n         }\r\n         else {\r\n            copyToClipboard(copyString);\r\n            e.target.innerText = \"✔️\";\r\n            setTimeout(()=>{e.target.innerText = \"\"},500);\r\n         }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <div className=\"colorPaletteModeButtons\">\r\n                <span id=\"paletteToggle\" onClick={this.props.togglePicker}>\r\n                ☰\r\n                </span>\r\n                {Object.keys(this.modes).map((e,i)=>{\r\n                    let mode = e;\r\n                    let checked = (e===this.state.mode) ? true : false;\r\n                    let id = `paletteMode${e}`;\r\n                    return (\r\n                        <span key={mode} className=\"colorPaletteModeButton\">\r\n                            <input type=\"radio\" name=\"paletteMode\" id={id} checked={checked} onChange={this.changeMode}></input>\r\n                            <label htmlFor={id}>{mode}</label>\r\n                        </span>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"colorPaletteModeButtons\" style={{borderBottom:\"none\"}}>\r\n                <span>clipboard format: </span>\r\n                {Object.keys(this.copiedFormats).map(e=>{\r\n                    let mode = e;\r\n                    let checked = (e===this.state[\"Copied format\"]) ? true : false;\r\n                    let id = `copiedFormat${e}`;\r\n                    return(\r\n                        <span key={e} className=\"colorPaletteModeButton\">\r\n                            <input type=\"radio\" name=\"CopiedFormat\" id={id} checked={checked} onChange={this.changeCopiedFormat}></input>\r\n                            <label htmlFor={id}>{mode}</label>\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            {React.createElement(\r\n                this.modes[this.state.mode],\r\n                {   //props\r\n                    paletteState:this.state,\r\n                    globalState:this.props.state,\r\n                    updateBaseColor:this.props.updateBaseColor,\r\n                    updateComponentState:this.updateComponentState,\r\n                    copiedFormats:this.copiedFormats,\r\n                    paletteBoxClick:this.paletteBoxClick,\r\n                }\r\n            )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    componentDidMount () {\r\n        this.applyCookie();\r\n    }\r\n}\r\n","//obtained from https://gist.github.com/Chalarangelo/4ff1e8c0ec03d9294628efbae49216db#file-copytoclipboard-js\r\nexport default function copyToClipboard (str) {\r\n    const el = document.createElement('textarea');  // Create a <textarea> element\r\n    el.value = str;                                 // Set its value to the string that you want copied\r\n    el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n    el.style.position = 'absolute';                 \r\n    el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n    document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n    const selected =            \r\n        document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n        ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n        : false;                                    // Mark as false to know no selection existed before\r\n    el.select();                                    // Select the <textarea> content\r\n    document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n    document.body.removeChild(el);                  // Remove the <textarea> element\r\n    if (selected) {                                 // If a selection existed before copying\r\n        document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n        document.getSelection().addRange(selected);   // Restore the original selection\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport {rgb2hsl,hsl2rgb} from '../accessories/colorConversion';\r\n\r\nexport default class RgbSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {\r\n            \"r\":255,\r\n            \"g\":255,\r\n            \"b\":255,\r\n        };\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.baseColorRGB.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") {return;}\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"\").replace(/[\\D]/g,\"\");\r\n            if (value >= this.inputs[colorVar]) value = this.inputs[colorVar];\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"rgb\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(rgb2hsl(...newColor));\r\n        }\r\n\r\n    }\r\n\r\n    setSliders = () => {\r\n        this.baseColorRGB = hsl2rgb(...this.props.state.baseColor);\r\n        [\"r\",\"g\",\"b\"].forEach((e,i)=>{\r\n            document.querySelector(\"#\"+e+\"r\").value = this.baseColorRGB[i];\r\n            document.querySelector(\"#\"+e+\"t\").value = this.baseColorRGB[i];\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"colorInputBox\">\r\n            <p>red, green, blue</p>\r\n                {Object.keys(this.inputs).map(e=>\r\n                        <div className=\"colorInputRow\" key={e[0]}>\r\n                        <label htmlFor={`${e}t}`}>{e} \r\n                        <input name={`${e}r`} id={`${e}r`}  type=\"range\" min=\"0\" max={this.inputs[e]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e}t`} min=\"0\" max={this.inputs[e]} size=\"4\" onInput={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </label>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport ColorPreview from './components/ColorPreview';\nimport ColorWheel from './components/ColorWheel';\nimport HslSliders from './components/HslSliders';\nimport ColorPalette from './components/ColorPalette';\nimport * as cookies from './accessories/cookies';\nimport './ColorTools.css';\nimport RgbSliders from './components/RgbSliders';\nexport default class ColorTools extends Component {\n  constructor(props) {\n    super (props);\n    this.state = { \n      baseColor:[0,100,50],\n      width:300,\n      picker:true,\n    };\n  }\n\n  updateBaseColor = (color) => { \n    if (color === this.state.baseColor) { return; }\n    if (color[0] >= 360) { color[0] = 0 }\n    if (color[1] >= 100) { color[1] = 100 }\n    if (color[2] >= 100) { color[2] = 100 }\n    color = color.map(e=>Number(e));\n    this.textColor = (color[2]>40) ? \"black\" : \"white\";\n    this.setState({baseColor:color});\n    //improve performance by only updating cookie if the mouse isn't down (specifically when picking a color in ColorWheel)\n    //explore using localdata instaed of cookies\n    this.updateCookie();\n  }\n\n  updateCookie = () => {\n    cookies.setCookie(\"colorTools\",JSON.stringify(this.state),1);\n  }\n\n  applyCookie = () => {\n    let cookie = cookies.getCookie(\"colorTools\");\n    (cookie) ? this.setState(JSON.parse(cookie)) : this.updateCookie();\n  }\n\n  togglePicker = () => {\n    let newState = this.state;\n    newState.picker = (newState.picker) ? false : true;\n    this.setState(newState);\n  }\n  pickerCSS = () => {\n    return (this.state.picker) ? { display: \"block\" } : { display: \"none\" };\n  }\n\n  render() {\n  return (\n    <div id=\"colorToolsFlexContainer\">\n      <div id=\"colorPickers\" style={this.pickerCSS()}>\n        <ColorPreview updateBaseColor={this.updateBaseColor} state={this.state} />\n        <ColorWheel updateBaseColor={this.updateBaseColor} state={this.state} />\n        <HslSliders updateBaseColor={this.updateBaseColor} state={this.state} />\n        <RgbSliders updateBaseColor={this.updateBaseColor} state={this.state} />\n      </div>\n      <div id=\"colorPalette\">\n        <ColorPalette updateBaseColor={this.updateBaseColor} togglePicker={this.togglePicker} state={this.state}/>\n      </div>\n    </div>\n  );\n  };\n  componentDidMount () {\n    this.applyCookie();\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ColorTools from './ColorTools';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<ColorTools />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}