{"version":3,"sources":["accessories/colorConversion.js","components/wheel.js","components/ColorWheel.js","components/HslSliders.js","components/RgbSliders.js","ColorTools.js","serviceWorker.js","index.js"],"names":["rgb2hsl","r","g","b","h","s","l","d","min","max","Math","abs","toFixed","rgb2hex","c","map","item","toString","length","join","toUpperCase","hsl2rgb","x","m","round","hex2rgb","hex","parseInt","substring","hex2hsl","this","apply","Object","toConsumableArray","hsl2hex","cWheel","width","baseColor","colorCanvas","colorCanvasUI","updateFunction","_this","classCallCheck","drawInnerBox","baseHue","arguments","undefined","baseColorHSL","row","topY","bottomY","rowPercent","boxGradient","ctx","createLinearGradient","leftX","rightX","i","addColorStop","concat","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","drawOuterWheel","segments","theta0","theta1","rad0","PI","rad1","x1","wheelRadius","cos","y1","height","sin","x2","y2","gradient","arc","drawOutput","output","forEach","e","a","Number","updateSelectedColor","baseColorHEX","cConvert","ctxUI","textAlign","font","outerWheelThickness","fillStyle","selectorLineWidth","strokeText","textX","textY","fillText","drawSelectors","selectors","wheelSelector","boxSelector","clearRect","selectedColor","externalInput","color","calculateWheelSelectorPosition","calculateBoxSelectorPosition","getNearestPointInBox","y","getNearestPointOnWheel","atan","mouseData","offsetX","offsetY","xDist","yDist","dist","sqrt","pow","mouseDown","preventDefault","selfInvoked","innerRadius","outerRadius","activeSelector","mouseMove","buttons","mouseUp","style","position","marginLeft","zIndex","getContext","boxWidth","boxHeight","ceil","init","theta","ColorWheel","props","state","updateBaseColor","colorWheel","react_default","createElement","Fragment","id","document","querySelector","addEventListener","Component","HslSliders","possibleConstructorReturn","getPrototypeOf","call","cFocus","target","select","colorVar","substr","buffer","value","cChange","persist","key","nativeEvent","data","newColor","slice","inputType","type","replace","inputs","indexOf","setSliders","componentDidUpdate","_this2","keys","className","htmlFor","name","onChange","size","onFocus","onBlur","RgbSliders","baseColorRGB","onInput","ColorTools","textColor","setState","backgroundColor","ColorWheel_ColorWheel","HslSliders_HslSliders","RgbSliders_RgbSliders","Boolean","window","location","hostname","match","ReactDOM","render","ColorTools_ColorTools","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.755e95cb.chunk.js","sourcesContent":["export function rgb2hsl (r,g,b) {\r\n    r=r/255; g=g/255; b=b/255;\r\n    let h,s,l,d,min,max = null;\r\n    max=Math.max(r,g,b);\r\n    min=Math.min(r,g,b);\r\n    d=max-min;\r\n    l=(max+min);\r\n    if (max===r) { h = 60*(((g-b)/d)%6); }\r\n    if (max===g) { h = 60*(((b-r)/d)+2); }\r\n    if (max===b) { h = 60*(((r-g)/d)+4); }\r\n    if (d===0) { h=0; s=0; }\r\n    if (h<0) { h=h+360; }\r\n    if (d!==0) { s=d/(1-Math.abs(l-1)); }\r\n    h = h.toFixed(2);\r\n    s = (s*100).toFixed(2);\r\n    l = (l*50).toFixed(2);\r\n    return [h,s,l];\r\n}\r\nexport function rgb2hex (r, g, b) {\r\n    let c = [r,g,b];\r\n    c = \"#\" + c.map(\r\n        function(item){\r\n            return item.toString(16);\r\n        }).map(\r\n        function(item){\r\n            if(item.length===1){return \"0\" + item;}\r\n            else {return(item);}\r\n        }).join(\"\").toUpperCase();\r\n    return c;\r\n}\r\nexport function hsl2rgb (h,s,l) {\r\n    s=s/100;\r\n    l=l/100;\r\n    let c=(1-Math.abs((2*l)-1))*s;\r\n    let x=c*(1-Math.abs(((h/60)%2)-1));\r\n    let m=l-c/2;\r\n    let r,g,b;\r\n    if (h<60|h===360) {r=c;g=x;b=0;}\r\n    else if (h<120)\t{r=x;g=c;b=0}\r\n    else if (h<180)\t{r=0;g=c;b=x}\r\n    else if (h<240) {r=0;g=x;b=c}\r\n    else if (h<300) {r=x;g=0;b=c}\r\n    else if (h<360)\t{r=c;g=0;b=x}\r\n    r=Math.round((r+m)*255);g=Math.round((g+m)*255);b=Math.round((b+m)*255);\r\n    return [r,g,b];\t\r\n}\r\nexport function hex2rgb (hex) {\r\n    let r = parseInt(hex.substring(1,3),16);\r\n    let g = parseInt(hex.substring(3,5),16);\r\n    let b = parseInt(hex.substring(5,7),16);\r\n    return [r,g,b];\r\n}\r\nexport function hex2hsl (hex) {\r\n    return this.rgb2hsl(...this.hex2rgb(hex));\r\n}\r\nexport function hsl2hex(h,s,l) {\r\n\treturn rgb2hex(...hsl2rgb(h,s,l));\r\n}","import * as cConvert from '../accessories/colorConversion';\r\nexport default class cWheel {\r\n    constructor(width,baseColor,colorCanvas,colorCanvasUI,updateFunction) {\r\n        this.baseColorHSL = baseColor;\r\n        this.h = baseColor[0];\r\n        this.s = baseColor[1];\r\n        this.l = baseColor[2];\r\n        this.baseColorHEX = cConvert.hsl2hex(baseColor);\r\n        this.updateSelectedColor = updateFunction;\r\n        this.colorCanvas = colorCanvas;\r\n        this.colorCanvasUI = colorCanvasUI;\r\n        this.width = width;\r\n        this.height = width; //must be a square\r\n        this.colorCanvas.width = this.width;\r\n        this.colorCanvas.height = this.height;\r\n        this.colorCanvasUI.width = this.width;\r\n        this.colorCanvasUI.height = this.height;\r\n        this.colorCanvasUI.style.position = 'relative';\r\n        this.colorCanvasUI.style.marginLeft = `-${this.width}px`;\r\n        this.colorCanvas.style.zIndex = '0';\r\n        this.colorCanvasUI.style.zIndex = '1';\r\n        this.ctx = this.colorCanvas.getContext(\"2d\");\r\n        this.ctxUI = this.colorCanvasUI.getContext(\"2d\");\r\n        this.outerWheelThickness = this.width/15;\r\n        this.ctx.lineWidth = this.outerWheelThickness;\r\n        this.wheelRadius = (this.width/2)-this.outerWheelThickness/2;\r\n        this.innerRadius = this.wheelRadius - this.outerWheelThickness/2;\r\n        this.outerRadius = this.wheelRadius + this.outerWheelThickness/2;\r\n        this.boxWidth = 2*(this.wheelRadius-(this.outerWheelThickness/2))/Math.sqrt(2)-2;\r\n        this.boxHeight = this.boxWidth;\r\n        this.leftX = (this.width/2)-(this.boxWidth/2);\r\n        this.topY = (this.height/2)-(this.boxHeight/2);\r\n        this.rightX = this.leftX+this.boxWidth;\r\n        this.bottomY = (this.height/2)+(this.boxHeight/2);\r\n        this.calculateWheelSelectorPosition(this.baseColorHSL);\r\n        this.calculateBoxSelectorPosition(this.baseColorHSL);\r\n        this.activeSelector = \"wheel\";\r\n        this.selectedColor = this.baseColorHSL; \r\n        this.selectorLineWidth = Math.ceil(this.outerWheelThickness/12);\r\n        this.textX = this.width/2;\r\n        this.textY = this.bottomY + this.outerWheelThickness*1.2;\r\n        this.selfInvoked = false;\r\n        this.init = (() => { \r\n            this.drawOuterWheel();this.drawInnerBox(); this.drawSelectors();\r\n        })();\r\n    };\r\n    calculateBoxSelectorPosition(color) {\r\n        let x = this.leftX + this.boxWidth * this.l/100;\r\n        let y = this.topY + this.boxHeight * this.s/100;\r\n        this.boxSelector = [x,y];\r\n    }\r\n    calculateWheelSelectorPosition(color) {\r\n        let r = this.wheelRadius;\r\n        let theta = color[0]*Math.PI/180;\r\n        let x = r*Math.cos(theta)+(this.width/2);\r\n        let y = -r*Math.sin(theta)+(this.height/2);\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    drawInnerBox = (baseHue=this.baseColorHSL[0]) => {\r\n        for (let row = this.topY; row <= this.bottomY; row++) { \r\n            let rowPercent = 100*(row-this.topY)/(this.bottomY-this.topY);\r\n            let boxGradient = this.ctx.createLinearGradient(this.leftX,row,this.rightX,row);\r\n            let steps = 10; //ten gradient steps produces good balance of performance and accuracy\r\n            for (let i=0; i<=steps; i++) { \r\n                boxGradient.addColorStop(i/steps,`hsla(${baseHue},${rowPercent}%,${100*i/steps}%,1)`);\r\n            }\r\n            this.ctx.strokeStyle = boxGradient;\r\n            this.ctx.lineWidth = 2;\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.leftX,row);\r\n            this.ctx.lineTo(this.rightX,row);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOuterWheel = (segments=12) => { \r\n        for (let i=0; i<segments; i++) {\r\n            let theta0 = i*360/segments;\r\n            let theta1 = (i+1)*360/segments;\r\n            let rad0 = theta0*Math.PI/180 - .01; // - .01 hides the gaps\r\n            let rad1 = theta1*Math.PI/180;\r\n            let x1 = this.wheelRadius*Math.cos(rad0)+(this.width/2); \r\n            let y1 = this.height - (this.wheelRadius*Math.sin(rad0)+(this.height/2)); \r\n            let x2 = this.wheelRadius*Math.cos(rad1)+(this.width/2);\r\n            let y2 = this.height - (this.wheelRadius*Math.sin(rad1)+(this.height/2));\r\n            let gradient = this.ctx.createLinearGradient(x1,y1,x2,y2); \r\n            gradient.addColorStop(0,`hsla(${theta0},100%,50%,1)`);\r\n            gradient.addColorStop(1,`hsla(${theta1},100%,50%,1)`);\r\n            this.ctx.strokeStyle = gradient;\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(this.width/2,this.height/2,this.wheelRadius,2*Math.PI-(rad0),2*Math.PI-(rad1),true);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOutput = (output) => {\r\n        output.forEach((e,i,a)=>a[i]=Number(a[i]).toFixed(2));\r\n        this.updateSelectedColor(output);\r\n        this.baseColorHEX = cConvert.hsl2hex(...output);\r\n        this.ctxUI.textAlign = 'center';\r\n        this.ctxUI.font = `${this.outerWheelThickness}px monospace`;\r\n        this.ctxUI.fillStyle = 'white';\r\n        this.ctxUI.strokeStyle = 'black';\r\n        this.ctxUI.lineWidth = this.selectorLineWidth+1;\r\n        this.ctxUI.strokeText(this.baseColorHEX, this.textX, this.textY);\r\n        this.ctxUI.fillText(this.baseColorHEX, this.textX, this.textY);\r\n    }\r\n    drawSelectors = () => {\r\n        let selectors = [[this.wheelSelector[0],this.wheelSelector[1]],[this.boxSelector[0],this.boxSelector[1]]];\r\n        this.ctxUI.clearRect(0,0,this.width,this.height);\r\n        selectors.forEach(e=> {\r\n            this.ctxUI.moveTo(e[0],e[1]);\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"#252525\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"white\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30-this.selectorLineWidth,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n        });\r\n        this.drawOutput(this.selectedColor);\r\n    }\r\n    externalInput = (color) => {\r\n        //add color format detection: hex/hsl\r\n        //if (color.match(/^#[0-9a-f]{3,6}$/i)) { color = cConvert.hex2hsl(color); }\r\n        this.h = color[0];\r\n        this.s = color[1];\r\n        this.l = color[2];\r\n        this.baseColorHSL = color;\r\n        this.baseColorHEX = cConvert.hsl2hex(color);\r\n        this.selectedColor = color;\r\n        this.calculateWheelSelectorPosition(color);\r\n        this.calculateBoxSelectorPosition(color);\r\n        this.drawInnerBox(this.baseColorHSL[0]);\r\n        this.drawSelectors();\r\n    }\r\n    getNearestPointInBox = (x,y) => {\r\n        if (x<this.leftX) { this.x = this.leftX };\r\n        if (x>this.rightX) { this.x = this.rightX };\r\n        if (y<this.topY) { this.y = this.topY };\r\n        if (y>this.bottomY) { this.y = this.bottomY };\r\n        this.s = 100*(this.y-this.topY)/(this.bottomY-this.topY);\r\n        this.l = 100*(this.x-this.leftX)/(this.rightX-this.leftX);\r\n        this.boxSelector = [this.x,this.y];\r\n    }\r\n    getNearestPointOnWheel = (x,y,d) => {\r\n        this.h = (180/Math.PI)*Math.atan(y/x);\r\n        if (x < 0) { this.h = this.h + 180; }\r\n        if (y < 0) { this.h = this.h + 360; }\r\n        this.h = 360-this.h;\r\n        if (this.h<0) { this.h = 360+this.h }\r\n        if (this.h===360) { this.h = 0; }\r\n        x = (this.width/2) + this.wheelRadius*x/d;\r\n        y = (this.width/2) + this.wheelRadius*y/d;\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    mouseData = (e) => {\r\n        this.x = e.offsetX;\r\n        this.y = e.offsetY;\r\n        this.xDist = this.x - this.width/2;\r\n        this.yDist = this.y - this.height/2;\r\n        this.dist = Math.sqrt(this.xDist**2 + this.yDist**2);\r\n    }\r\n    mouseDown = (e) => {\r\n        e.preventDefault();\r\n        this.selfInvoked = true;\r\n        this.mouseData(e);\r\n        if (this.dist > this.innerRadius && this.dist < this.outerRadius) { \r\n            this.activeSelector = \"wheel\";\r\n            this.mouseMove(e);\r\n        }\r\n        else if (this.x>this.leftX && this.x<this.rightX && this.y>this.topY && this.y<this.bottomY) { \r\n            this.activeSelector = \"box\";\r\n            this.mouseMove(e);\r\n        }\r\n        else { this.activeSelector = null; }\r\n    }\r\n    mouseMove = (e) => {\r\n        if (e.buttons === 0) { return; }\r\n        this.mouseData(e);\r\n        if (this.activeSelector === \"wheel\") {\r\n            this.getNearestPointOnWheel(this.xDist,this.yDist,this.dist);\r\n            this.drawInnerBox(this.h);\r\n            this.selectedColor = [this.h,this.s,this.l];\r\n            this.drawSelectors();\r\n        }\r\n        if (this.activeSelector === \"box\") { \r\n            this.getNearestPointInBox(this.x,this.y);\r\n            this.selectedColor = [this.h,this.s,this.l];\r\n            this.drawSelectors();\r\n        }\r\n    }\r\n    mouseUp = () => {\r\n        this.updateSelectedColor(this.selectedColor);\r\n        this.selfInvoked = false;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport cWheel from './wheel';\r\n//todo: \"copy\"/\"OK\"/\"close\" buttons\r\n//todo: preview box in top left\r\nexport default class ColorWheel extends Component {\r\n\r\n    updateSelectedColor = (color) => { \r\n        if (color === this.props.state.baseColor) { return; }\r\n        this.props.updateBaseColor(color);\r\n    }\r\n    componentDidUpdate() {\r\n        if(this.colorWheel.selfInvoked === false) {\r\n            this.colorWheel.externalInput(this.props.state.baseColor);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <div id=\"canvasContainer\">\r\n                <canvas id=\"colorCanvas\"></canvas>\r\n                <canvas id=\"colorCanvasUI\"></canvas>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n    componentDidMount() {\r\n        let colorCanvas = document.querySelector(\"#colorCanvas\");\r\n        let colorCanvasUI = document.querySelector(\"#colorCanvasUI\");\r\n        this.colorWheel = new cWheel(this.props.state.width,this.props.state.baseColor,colorCanvas,colorCanvasUI,this.updateSelectedColor);\r\n        colorCanvasUI.addEventListener(\"mousedown\",this.colorWheel.mouseDown);\r\n        colorCanvasUI.addEventListener(\"mousemove\",this.colorWheel.mouseMove);\r\n        colorCanvasUI.addEventListener(\"mouseup\",this.colorWheel.mouseUp);\r\n        //add touchevents!\r\n    }\r\n};\r\n\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport default class HslSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {\r\n            \"h\":359.99,\r\n            \"s\":100,\r\n            \"l\":100\r\n        };\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.props.state.baseColor.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") {return;}\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"[dec]\").replace(/\\./g,\"\").replace(\"[dec]\",\".\").replace(/[^\\d.]/g,\"\");\r\n            if (value >= this.inputs[colorVar]) value = this.inputs[colorVar];\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"hsl\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(newColor);\r\n        }\r\n    }\r\n\r\n    setSliders = () => {\r\n        [\"h\",\"s\",\"l\"].forEach((e,i)=>{\r\n            const value = (e===this.buffer[0]) ? this.buffer[1] : this.props.state.baseColor[i];\r\n            document.querySelector(\"#\"+e+\"r\").value = Number(value);\r\n            document.querySelector(\"#\"+e+\"t\").value = value;\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {Object.keys(this.inputs).map(e=>\r\n                        <div className=\"colorInputRow\" key={e[0]}>\r\n                        <label htmlFor={`${e}r}`}>{e} </label>\r\n                        <input name={`${e}r`} id={`${e}r`}  type=\"range\" min=\"0\" max={this.inputs[e]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e}t`} min=\"0\" max={this.inputs[e]} size=\"6\" onChange={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {rgb2hsl,hsl2rgb} from '../accessories/colorConversion';\r\n\r\nexport default class RgbSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {\r\n            \"r\":255,\r\n            \"g\":255,\r\n            \"b\":255,\r\n        };\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.baseColorRGB.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") {return;}\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"\").replace(/[\\D]/g,\"\");\r\n            if (value >= this.inputs[colorVar]) value = this.inputs[colorVar];\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"rgb\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(rgb2hsl(...newColor));\r\n        }\r\n\r\n    }\r\n\r\n    setSliders = () => {\r\n        this.baseColorRGB = hsl2rgb(...this.props.state.baseColor);\r\n        [\"r\",\"g\",\"b\"].forEach((e,i)=>{\r\n            document.querySelector(\"#\"+e+\"r\").value = this.baseColorRGB[i];\r\n            document.querySelector(\"#\"+e+\"t\").value = this.baseColorRGB[i];\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {Object.keys(this.inputs).map(e=>\r\n                        <div className=\"colorInputRow\" key={e[0]}>\r\n                        <label htmlFor={`${e}r}`}>{e} </label>\r\n                        <input name={`${e}r`} id={`${e}r`}  type=\"range\" min=\"0\" max={this.inputs[e]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e}t`} min=\"0\" max={this.inputs[e]} size=\"6\" onInput={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport ColorWheel from './components/ColorWheel';\nimport HslSliders from './components/HslSliders';\nimport * as cConvert from './accessories/colorConversion';\nimport './ColorTools.css';\nimport RgbSliders from './components/RgbSliders';\nexport default class ColorTools extends Component {\n  constructor(props) {\n    super (props);\n    this.state = { \n      baseColor:[0,100,50],\n      width:300,\n    };\n    this.textColor = (this.state.baseColor[2]>40) ? \"black\" : \"white\";\n  }\n  updateBaseColor = (color) => { \n    if (color === this.state.baseColor) { return; }\n    if (color[0] >= 360) { color[0] = 0 }\n    if (color[1] >= 100) { color[1] = 100 }\n    if (color[2] >= 100) { color[2] = 100 }\n    this.textColor = (color[2]>40) ? \"black\" : \"white\";\n    this.setState({baseColor:color});\n  }\n  render() {\n  return (\n    <div id=\"colorToolsFlexContainer\">\n      <div id=\"colorPickers\" style={{width:this.state.width}}>\n        <div id=\"colorOutput\" style={{backgroundColor:cConvert.hsl2hex(...this.state.baseColor),color:this.textColor}}>\n          <p>hex: {cConvert.hsl2hex(...this.state.baseColor)}</p>\n          <p>hsl: {this.state.baseColor.join(\", \")}</p>\n          <p>rgb: {cConvert.hsl2rgb(...this.state.baseColor).join(\", \")}</p>\n        </div>\n        <ColorWheel updateBaseColor={this.updateBaseColor} state={this.state} />\n        <HslSliders updateBaseColor={this.updateBaseColor} state={this.state} />\n        <RgbSliders updateBaseColor={this.updateBaseColor} state={this.state} />\n      </div>\n    </div>\n  );\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ColorTools from './ColorTools';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<ColorTools />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}