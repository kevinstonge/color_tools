{"version":3,"sources":["accessories/colorConversion.js","components/wheel.js","components/ColorWheel.js","components/HslSliders.js","components/RgbSliders.js","ColorTools.js","serviceWorker.js","index.js"],"names":["rgb2hsl","r","g","b","h","s","l","d","min","max","Math","abs","toFixed","rgb2hex","c","map","item","toString","length","join","toUpperCase","hsl2rgb","x","m","round","hex2rgb","hex","parseInt","substring","hex2hsl","this","apply","Object","toConsumableArray","hsl2hex","cWheel","width","height","baseColor","colorCanvas","colorCanvasUI","updateFunction","_this","classCallCheck","drawInnerBox","baseHue","arguments","undefined","baseColorHSL","row","topY","bottomY","rowPercent","boxGradient","ctx","createLinearGradient","leftX","rightX","i","addColorStop","concat","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","drawOuterWheel","segments","theta0","theta1","rad0","PI","rad1","x1","wheelRadius","cos","y1","sin","x2","y2","gradient","arc","drawOutput","output","forEach","e","a","Number","updateSelectedColor","baseColorHEX","cConvert","ctxUI","textAlign","font","outerWheelThickness","fillStyle","selectorLineWidth","strokeText","textX","textY","fillText","drawSelectors","selectors","wheelSelector","boxSelector","clearRect","selectedColor","externalInput","color","calculateWheelSelectorPosition","calculateBoxSelectorPosition","getNearestPointInBox","y","getNearestPointOnWheel","atan","mouseData","offsetX","offsetY","xDist","yDist","dist","sqrt","pow","mouseDown","preventDefault","selfInvoked","innerRadius","outerRadius","activeSelector","mouseMove","buttons","mouseUp","style","position","marginLeft","zIndex","getContext","boxWidth","boxHeight","ceil","theta","ColorWheel","props","updateBaseColor","colorWheel","react_default","createElement","Fragment","id","document","querySelector","addEventListener","Component","HslSliders","possibleConstructorReturn","getPrototypeOf","call","cFocus","target","select","colorVar","substr","buffer","value","cChange","persist","key","nativeEvent","data","newColor","slice","inputType","type","replace","indexOf","setSliders","componentDidUpdate","inputs","_this2","className","htmlFor","name","onChange","onFocus","onBlur","RgbSliders","baseColorRGB","onInput","ColorTools","state","setState","textColor","backgroundColor","ColorWheel_ColorWheel","HslSliders_HslSliders","RgbSliders_RgbSliders","Boolean","window","location","hostname","match","ReactDOM","render","ColorTools_ColorTools","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8d34164.chunk.js","sourcesContent":["export function rgb2hsl (r,g,b) {\r\n    r=r/255; g=g/255; b=b/255;\r\n    let h,s,l,d,min,max = null;\r\n    max=Math.max(r,g,b);\r\n    min=Math.min(r,g,b);\r\n    d=max-min;\r\n    l=(max+min);\r\n    if (max===r) { h = 60*(((g-b)/d)%6); }\r\n    if (max===g) { h = 60*(((b-r)/d)+2); }\r\n    if (max===b) { h = 60*(((r-g)/d)+4); }\r\n    if (d===0) { h=0; s=0; }\r\n    if (h<0) { h=h+360; }\r\n    if (d!==0) { s=d/(1-Math.abs(l-1)); }\r\n    h = h.toFixed(2);\r\n    s = (s*100).toFixed(2);\r\n    l = (l*50).toFixed(2);\r\n    return [h,s,l];\r\n}\r\nexport function rgb2hex (r, g, b) {\r\n    let c = [r,g,b];\r\n    c = \"#\" + c.map(\r\n        function(item){\r\n            return item.toString(16);\r\n        }).map(\r\n        function(item){\r\n            if(item.length===1){return \"0\" + item;}\r\n            else {return(item);}\r\n        }).join(\"\").toUpperCase();\r\n    return c;\r\n}\r\nexport function hsl2rgb (h,s,l) {\r\n    s=s/100;\r\n    l=l/100;\r\n    let c=(1-Math.abs((2*l)-1))*s;\r\n    let x=c*(1-Math.abs(((h/60)%2)-1));\r\n    let m=l-c/2;\r\n    let r,g,b;\r\n    if (h<60|h===360) {r=c;g=x;b=0;}\r\n    else if (h<120)\t{r=x;g=c;b=0}\r\n    else if (h<180)\t{r=0;g=c;b=x}\r\n    else if (h<240) {r=0;g=x;b=c}\r\n    else if (h<300) {r=x;g=0;b=c}\r\n    else if (h<360)\t{r=c;g=0;b=x}\r\n    r=Math.round((r+m)*255);g=Math.round((g+m)*255);b=Math.round((b+m)*255);\r\n    return [r,g,b];\t\r\n}\r\nexport function hex2rgb (hex) {\r\n    let r = parseInt(hex.substring(1,3),16);\r\n    let g = parseInt(hex.substring(3,5),16);\r\n    let b = parseInt(hex.substring(5,7),16);\r\n    return [r,g,b];\r\n}\r\nexport function hex2hsl (hex) {\r\n    return this.rgb2hsl(...this.hex2rgb(hex));\r\n}\r\nexport function hsl2hex(h,s,l) {\r\n\treturn rgb2hex(...hsl2rgb(h,s,l));\r\n}","import * as cConvert from '../accessories/colorConversion';\r\nexport default class cWheel {\r\n    constructor(width,height,baseColor,colorCanvas,colorCanvasUI,updateFunction) {\r\n    this.baseColorHSL = baseColor;\r\n    this.h = baseColor[0];\r\n    this.s = baseColor[1];\r\n    this.l = baseColor[2];\r\n    this.baseColorHEX = cConvert.hsl2hex(baseColor);\r\n    this.updateSelectedColor = updateFunction;\r\n    this.colorCanvas = colorCanvas;\r\n    this.colorCanvasUI = colorCanvasUI;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.colorCanvas.width = this.width;\r\n    this.colorCanvas.height = this.height;\r\n    this.colorCanvasUI.width = this.width;\r\n    this.colorCanvasUI.height = this.height;\r\n    this.colorCanvasUI.style.position = 'relative';\r\n    this.colorCanvasUI.style.marginLeft = `-${this.width}px`;\r\n    this.colorCanvasUI.style.zIndex = '1';\r\n    this.ctx = this.colorCanvas.getContext(\"2d\");\r\n    this.ctxUI = this.colorCanvasUI.getContext(\"2d\");\r\n    this.outerWheelThickness = this.width/15;\r\n    this.ctx.lineWidth = this.outerWheelThickness;\r\n    this.wheelRadius = (this.width/2)-this.outerWheelThickness/2;\r\n    this.innerRadius = this.wheelRadius - this.outerWheelThickness/2;\r\n    this.outerRadius = this.wheelRadius + this.outerWheelThickness/2;\r\n    this.boxWidth = 2*(this.wheelRadius-(this.outerWheelThickness/2))/Math.sqrt(2)-2;\r\n    this.boxHeight = this.boxWidth;\r\n    this.leftX = (this.width/2)-(this.boxWidth/2);\r\n    this.topY = (this.height/2)-(this.boxHeight/2);\r\n    this.rightX = this.leftX+this.boxWidth;\r\n    this.bottomY = (this.height/2)+(this.boxHeight/2);\r\n    this.calculateWheelSelectorPosition(this.baseColorHSL);\r\n    this.calculateBoxSelectorPosition(this.baseColorHSL);\r\n    this.activeSelector = \"wheel\";\r\n    this.selectedColor = this.baseColorHSL; \r\n    this.selectorLineWidth = Math.ceil(this.outerWheelThickness/12);\r\n    this.textX = this.width/2;\r\n    this.textY = this.bottomY + this.outerWheelThickness*1.2;\r\n    this.selfInvoked = false;\r\n    };\r\n    calculateBoxSelectorPosition(color) {\r\n        let x = this.leftX + this.boxWidth * this.l/100;\r\n        let y = this.topY + this.boxHeight * this.s/100;\r\n        this.boxSelector = [x,y];\r\n    }\r\n    calculateWheelSelectorPosition(color) {\r\n        let r = this.wheelRadius;\r\n        let theta = color[0]*Math.PI/180;\r\n        let x = r*Math.cos(theta)+(this.width/2);\r\n        let y = -r*Math.sin(theta)+(this.height/2);\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    drawInnerBox = (baseHue=this.baseColorHSL[0]) => {\r\n        for (let row = this.topY; row <= this.bottomY; row++) { \r\n            let rowPercent = 100*(row-this.topY)/(this.bottomY-this.topY);\r\n            let boxGradient = this.ctx.createLinearGradient(this.leftX,row,this.rightX,row);\r\n            let steps = 10; //ten gradient steps produces good balance of performance and accuracy\r\n            for (let i=0; i<=steps; i++) { \r\n                boxGradient.addColorStop(i/steps,`hsla(${baseHue},${rowPercent}%,${100*i/steps}%,1)`);\r\n            }\r\n            this.ctx.strokeStyle = boxGradient;\r\n            this.ctx.lineWidth = 2;\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.leftX,row);\r\n            this.ctx.lineTo(this.rightX,row);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOuterWheel = (segments=12) => { \r\n        for (let i=0; i<segments; i++) {\r\n            let theta0 = i*360/segments;\r\n            let theta1 = (i+1)*360/segments;\r\n            let rad0 = theta0*Math.PI/180 - .01; // - .01 hides the gaps\r\n            let rad1 = theta1*Math.PI/180;\r\n            let x1 = this.wheelRadius*Math.cos(rad0)+(this.width/2); \r\n            let y1 = this.height - (this.wheelRadius*Math.sin(rad0)+(this.height/2)); \r\n            let x2 = this.wheelRadius*Math.cos(rad1)+(this.width/2);\r\n            let y2 = this.height - (this.wheelRadius*Math.sin(rad1)+(this.height/2));\r\n            let gradient = this.ctx.createLinearGradient(x1,y1,x2,y2); \r\n            gradient.addColorStop(0,`hsla(${theta0},100%,50%,1)`);\r\n            gradient.addColorStop(1,`hsla(${theta1},100%,50%,1)`);\r\n            this.ctx.strokeStyle = gradient;\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(this.width/2,this.height/2,this.wheelRadius,2*Math.PI-(rad0),2*Math.PI-(rad1),true);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOutput = (output) => {\r\n        output.forEach((e,i,a)=>a[i]=Number(a[i]).toFixed(2));\r\n        this.updateSelectedColor(output);\r\n        this.baseColorHEX = cConvert.hsl2hex(...output);\r\n        this.ctxUI.textAlign = 'center';\r\n        this.ctxUI.font = `${this.outerWheelThickness}px monospace`;\r\n        this.ctxUI.fillStyle = 'white';\r\n        this.ctxUI.strokeStyle = 'black';\r\n        this.ctxUI.lineWidth = this.selectorLineWidth+1;\r\n        this.ctxUI.strokeText(this.baseColorHEX, this.textX, this.textY);\r\n        this.ctxUI.fillText(this.baseColorHEX, this.textX, this.textY);\r\n    }\r\n    drawSelectors = () => {\r\n        let selectors = [[this.wheelSelector[0],this.wheelSelector[1]],[this.boxSelector[0],this.boxSelector[1]]];\r\n        this.ctxUI.clearRect(0,0,this.width,this.height);\r\n        selectors.forEach(e=> {\r\n            this.ctxUI.moveTo(e[0],e[1]);\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"#252525\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"white\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30-this.selectorLineWidth,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n        });\r\n        this.drawOutput(this.selectedColor);\r\n    }\r\n    externalInput = (color) => {\r\n        //add color format detection: hex/hsl\r\n        //if (color.match(/^#[0-9a-f]{3,6}$/i)) { color = cConvert.hex2hsl(color); }\r\n        this.h = color[0];\r\n        this.s = color[1];\r\n        this.l = color[2];\r\n        this.baseColorHSL = color;\r\n        this.baseColorHEX = cConvert.hsl2hex(color);\r\n        this.selectedColor = color;\r\n        this.calculateWheelSelectorPosition(color);\r\n        this.calculateBoxSelectorPosition(color);\r\n        this.drawInnerBox(this.baseColorHSL[0]);\r\n        this.drawSelectors();\r\n    }\r\n    getNearestPointInBox = (x,y) => {\r\n        if (x<this.leftX) { this.x = this.leftX };\r\n        if (x>this.rightX) { this.x = this.rightX };\r\n        if (y<this.topY) { this.y = this.topY };\r\n        if (y>this.bottomY) { this.y = this.bottomY };\r\n        this.s = 100*(this.y-this.topY)/(this.bottomY-this.topY);\r\n        this.l = 100*(this.x-this.leftX)/(this.rightX-this.leftX);\r\n        this.boxSelector = [this.x,this.y];\r\n    }\r\n    getNearestPointOnWheel = (x,y,d) => {\r\n        this.h = (180/Math.PI)*Math.atan(y/x);\r\n        if (x < 0) { this.h = this.h + 180; }\r\n        if (y < 0) { this.h = this.h + 360; }\r\n        this.h = 360-this.h;\r\n        if (this.h<0) { this.h = 360+this.h }\r\n        if (this.h===360) { this.h = 0; }\r\n        x = (this.width/2) + this.wheelRadius*x/d;\r\n        y = (this.width/2) + this.wheelRadius*y/d;\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    mouseData = (e) => {\r\n        this.x = e.offsetX;\r\n        this.y = e.offsetY;\r\n        this.xDist = this.x - this.width/2;\r\n        this.yDist = this.y - this.height/2;\r\n        this.dist = Math.sqrt(this.xDist**2 + this.yDist**2);\r\n    }\r\n    mouseDown = (e) => {\r\n        e.preventDefault();\r\n        this.selfInvoked = true;\r\n        this.mouseData(e);\r\n        if (this.dist > this.innerRadius && this.dist < this.outerRadius) { \r\n            this.activeSelector = \"wheel\";\r\n            this.mouseMove(e);\r\n        }\r\n        else if (this.x>this.leftX && this.x<this.rightX && this.y>this.topY && this.y<this.bottomY) { \r\n            this.activeSelector = \"box\";\r\n            this.mouseMove(e);\r\n        }\r\n        else { this.activeSelector = null; }\r\n    }\r\n    mouseMove = (e) => {\r\n        if (e.buttons === 0) { return; }\r\n        this.mouseData(e);\r\n        if (this.activeSelector === \"wheel\") {\r\n            this.getNearestPointOnWheel(this.xDist,this.yDist,this.dist);\r\n            this.drawInnerBox(this.h);\r\n            this.selectedColor = [this.h,this.s,this.l];\r\n            this.drawSelectors();\r\n        }\r\n        if (this.activeSelector === \"box\") { \r\n            this.getNearestPointInBox(this.x,this.y);\r\n            this.selectedColor = [this.h,this.s,this.l];\r\n            this.drawSelectors();\r\n        }\r\n    }\r\n    mouseUp = () => {\r\n        this.updateSelectedColor(this.selectedColor);\r\n        this.selfInvoked = false;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport cWheel from './wheel';\r\n//todo: \"copy\"/\"OK\"/\"close\" buttons\r\n//todo: preview box in top left\r\nexport default class ColorWheel extends Component {\r\n\r\n    updateSelectedColor = (color) => { \r\n        if (color === this.props.baseColor) { return; }\r\n        this.props.updateBaseColor(color);\r\n    }\r\n    componentDidUpdate() {\r\n        if(this.colorWheel.selfInvoked === false) {\r\n            this.colorWheel.externalInput(this.props.baseColor);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <div id=\"canvasContainer\">\r\n                <canvas id=\"colorCanvas\"></canvas>\r\n                <canvas id=\"colorCanvasUI\"></canvas>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n    componentDidMount() {\r\n        let colorCanvas = document.querySelector(\"#colorCanvas\");\r\n        let colorCanvasUI = document.querySelector(\"#colorCanvasUI\");\r\n        this.colorWheel = new cWheel(300,300,this.props.baseColor,colorCanvas,colorCanvasUI,this.updateSelectedColor);\r\n        this.colorWheel.drawOuterWheel();this.colorWheel.drawInnerBox(); this.colorWheel.drawSelectors();\r\n        colorCanvasUI.addEventListener(\"mousedown\",this.colorWheel.mouseDown);\r\n        colorCanvasUI.addEventListener(\"mousemove\",this.colorWheel.mouseMove);\r\n        colorCanvasUI.addEventListener(\"mouseup\",this.colorWheel.mouseUp);\r\n        //add touchevents!\r\n    }\r\n};\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class HslSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = [[\"h\",359],[\"s\",100],[\"l\",100]];\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.props.baseColor.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") return;\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"[dec]\").replace(/\\./g,\"\").replace(\"[dec]\",\".\").replace(/[^\\d.]/g,\"\");\r\n            if (colorVar === \"h\" && value >= 359.99) value = 359.99;\r\n            if ((colorVar === \"s\" || colorVar === \"l\") && value > 100) value = 100;\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"hsl\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(newColor);\r\n        }\r\n    }\r\n\r\n    setSliders = () => {\r\n        [\"h\",\"s\",\"l\"].forEach((e,i)=>{\r\n            const value = (e===this.buffer[0]) ? this.buffer[1] : this.props.baseColor[i];\r\n            document.querySelector(\"#\"+e+\"r\").value = Number(value);\r\n            document.querySelector(\"#\"+e+\"t\").value = value;\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.inputs.map(e=>\r\n                        <div className=\"hslSlider\" key={e[0]}>\r\n                        <label htmlFor={`${e[0]}r}`}>{e[0]} </label>\r\n                        <input name={`${e[0]}r`} id={`${e[0]}r`}  type=\"range\" min=\"0\" max={e[1]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e[0]}t`} min=\"0\" max={e[1]} onChange={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {rgb2hsl,hsl2rgb} from '../accessories/colorConversion';\r\n\r\nexport default class RgbSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = [[\"r\",255],[\"g\",255],[\"b\",255]];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        let newColor = this.baseColorRGB.slice();    \r\n        if (e.target.type === \"text\") {\r\n            if (key === null || value === null) return;\r\n            value = value.replace(/\\./,\"\").replace(/[\\D]/g,\"\");\r\n            if (value >= 255) value = 255;\r\n            e.target.value = value;\r\n        }\r\n        newColor[\"rgb\".indexOf(colorVar)] = Number(e.target.value);\r\n        this.props.updateBaseColor(rgb2hsl(...newColor));\r\n    }\r\n\r\n    setSliders = () => {\r\n        this.baseColorRGB = hsl2rgb(...this.props.baseColor);\r\n        [\"r\",\"g\",\"b\"].forEach((e,i)=>{\r\n            document.querySelector(\"#\"+e+\"r\").value = this.baseColorRGB[i];\r\n            document.querySelector(\"#\"+e+\"t\").value = this.baseColorRGB[i];\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.inputs.map(e=>\r\n                        <div className=\"hslSlider\" key={e[0]}>\r\n                        <label htmlFor={`${e[0]}r}`}>{e[0]} </label>\r\n                        <input name={`${e[0]}r`} id={`${e[0]}r`}  type=\"range\" min=\"0\" max={e[1]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e[0]}t`} min=\"0\" max={e[1]} onInput={this.cChange}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport ColorWheel from './components/ColorWheel';\nimport HslSliders from './components/HslSliders';\nimport * as cConvert from './accessories/colorConversion';\nimport './ColorTools.css';\nimport RgbSliders from './components/RgbSliders';\nexport default class ColorTools extends Component {\n  constructor(props) {\n    super (props);\n    this.state = { baseColor:[0,100,50] };\n    this.textColor = (this.state.baseColor[2]>40) ? \"black\" : \"white\";\n  }\n  updateBaseColor = (color) => { \n    if (color === this.state.baseColor) { return; }\n    if (color[0] >= 360) { color[0] = 0 }\n    if (color[1] >= 100) { color[1] = 100 }\n    if (color[2] >= 100) { color[2] = 100 }\n    this.setState({baseColor:color});\n    this.textColor = (this.state.baseColor[2]>40) ? \"black\" : \"white\";\n  }\n  render() {\n  return (\n    <div>\n      <div style={{backgroundColor:cConvert.hsl2hex(...this.state.baseColor),color:this.textColor}}>\n        <p>hex: {cConvert.hsl2hex(...this.state.baseColor)}</p>\n        <p>hsl: {this.state.baseColor.join(\",\")}</p>\n        <p>rgb: {cConvert.hsl2rgb(...this.state.baseColor).join(\",\")}</p>\n      </div>\n      <ColorWheel updateBaseColor={this.updateBaseColor} baseColor={this.state.baseColor} />\n      <HslSliders updateBaseColor={this.updateBaseColor} baseColor={this.state.baseColor} />\n      <RgbSliders updateBaseColor={this.updateBaseColor} baseColor={this.state.baseColor} />\n    </div>\n  );\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ColorTools from './ColorTools';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<ColorTools />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}