{"version":3,"sources":["accessories/colorConversion.js","components/ColorPreview.js","components/wheel.js","components/ColorWheel.js","components/HslSliders.js","components/RgbSliders.js","ColorTools.js","serviceWorker.js","index.js"],"names":["rgb2hsl","r","g","b","h","s","l","d","min","max","Math","abs","toFixed","rgb2hex","c","map","item","toString","length","join","toUpperCase","hsl2rgb","x","m","round","hex2rgb","hex","concat","parseInt","substring","hex2hsl","this","apply","Object","toConsumableArray","hsl2hex","ColorPreview","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","iChange","e","persist","newColor","input","target","value","nativeEvent","data","charAfterCarat","selectionStart","undefined","match","id","document","querySelector","innerText","cConvert","tempColor","filter","Boolean","slice","updateBaseColor","iFocus","select","buffer","getData","type","colorData","backgroundColor","state","baseColor","color","updateInputs","keys","forEach","copyColor","execCommand","hsl","rgb","_this2","react_default","a","createElement","style","key","htmlFor","size","onChange","onFocus","onBlur","role","arei-label","aria-hidden","title","onClick","Component","cWheel","width","colorCanvas","colorCanvasUI","updateFunction","drawInnerBox","baseHue","arguments","baseColorHSL","row","topY","bottomY","rowPercent","boxGradient","ctx","createLinearGradient","leftX","rightX","i","addColorStop","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","drawOuterWheel","segments","theta0","theta1","rad0","PI","rad1","x1","wheelRadius","cos","y1","height","sin","x2","y2","gradient","arc","drawOutput","output","Number","updateSelectedColor","baseColorHEX","ctxUI","textAlign","font","outerWheelThickness","fillStyle","selectorLineWidth","strokeText","textX","textY","fillText","drawSelectors","selectors","wheelSelector","boxSelector","clearRect","selectedColor","externalInput","calculateWheelSelectorPosition","calculateBoxSelectorPosition","getNearestPointInBox","y","getNearestPointOnWheel","atan","mouseData","offsetX","offsetY","xDist","yDist","dist","sqrt","pow","mouseDown","preventDefault","selfInvoked","innerRadius","outerRadius","activeSelector","mouseMove","buttons","mouseUp","position","marginLeft","zIndex","getContext","boxWidth","boxHeight","ceil","init","theta","ColorWheel","colorWheel","Fragment","addEventListener","HslSliders","cFocus","colorVar","substr","cChange","inputType","replace","inputs","indexOf","setSliders","componentDidUpdate","className","name","RgbSliders","baseColorRGB","onInput","ColorTools","textColor","setState","ColorPreview_ColorPreview","ColorWheel_ColorWheel","HslSliders_HslSliders","RgbSliders_RgbSliders","window","location","hostname","ReactDOM","render","ColorTools_ColorTools","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80e4a324.chunk.js","sourcesContent":["export function rgb2hsl (r,g,b) {\r\n    r=r/255; g=g/255; b=b/255;\r\n    let h,s,l,d,min,max = null;\r\n    max=Math.max(r,g,b);\r\n    min=Math.min(r,g,b);\r\n    d=max-min;\r\n    l=(max+min);\r\n    if (max===r) { h = 60*(((g-b)/d)%6); }\r\n    if (max===g) { h = 60*(((b-r)/d)+2); }\r\n    if (max===b) { h = 60*(((r-g)/d)+4); }\r\n    if (d===0) { h=0; s=0; }\r\n    if (h<0) { h=h+360; }\r\n    if (d!==0) { s=d/(1-Math.abs(l-1)); }\r\n    h = h.toFixed(2);\r\n    s = (s*100).toFixed(2);\r\n    l = (l*50).toFixed(2);\r\n    return [h,s,l];\r\n}\r\nexport function rgb2hex (r, g, b) {\r\n    let c = [r,g,b];\r\n    c = \"#\" + c.map(\r\n        function(item){\r\n            return item.toString(16);\r\n        }).map(\r\n        function(item){\r\n            if(item.length===1){return \"0\" + item;}\r\n            else {return(item);}\r\n        }).join(\"\").toUpperCase();\r\n    return c;\r\n}\r\nexport function hsl2rgb (h,s,l) {\r\n    s=s/100;\r\n    l=l/100;\r\n    let c=(1-Math.abs((2*l)-1))*s;\r\n    let x=c*(1-Math.abs(((h/60)%2)-1));\r\n    let m=l-c/2;\r\n    let r,g,b;\r\n    if (h<60|h===360) {r=c;g=x;b=0;}\r\n    else if (h<120)\t{r=x;g=c;b=0}\r\n    else if (h<180)\t{r=0;g=c;b=x}\r\n    else if (h<240) {r=0;g=x;b=c}\r\n    else if (h<300) {r=x;g=0;b=c}\r\n    else if (h<360)\t{r=c;g=0;b=x}\r\n    r=Math.round((r+m)*255);g=Math.round((g+m)*255);b=Math.round((b+m)*255);\r\n    return [r,g,b];\t\r\n}\r\nexport function hex2rgb (hex) {\r\n    hex = (hex[0]===\"#\") ? hex : `#${hex}`;\r\n    let r = parseInt(hex.substring(1,3),16);\r\n    let g = parseInt(hex.substring(3,5),16);\r\n    let b = parseInt(hex.substring(5,7),16);\r\n    return [r,g,b];\r\n}\r\nexport function hex2hsl (hex) {\r\n    return this.rgb2hsl(...this.hex2rgb(hex));\r\n}\r\nexport function hsl2hex(h,s,l) {\r\n\treturn rgb2hex(...hsl2rgb(h,s,l));\r\n}","import React, { Component } from 'react'\r\nimport * as cConvert from '../accessories/colorConversion';\r\n\r\nexport default class ColorPreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buffer=\"\";\r\n        this.colorData={\r\n            \"hex\":()=>cConvert.hsl2hex(...this.props.state.baseColor),\r\n            \"hsl\":()=>this.props.state.baseColor.join(\", \"),\r\n            \"rgb\":()=>cConvert.hsl2rgb(...this.props.state.baseColor).join(\", \")\r\n        };\r\n    } \r\n    iChange = (e) => {\r\n        e.persist();\r\n        let newColor = null;\r\n        let input = e.target.value;\r\n        if (input === \"\") { return; }\r\n        if (e.nativeEvent.data === \".\") {\r\n            let charAfterCarat = input[e.target.selectionStart];\r\n            if (charAfterCarat === undefined) { return; }\r\n            else if (charAfterCarat.match(/^[0-9]/)===null) { return; }\r\n        }\r\n        if (e.target.id === \"hexInput\") {\r\n            if (input.match(/^#{0,1}[0-9a-f]{6}$/i)) { \r\n                document.querySelector(\"#hexhelp\").innerText = \"❔\";\r\n                newColor = cConvert.hex2hsl(input);\r\n            }\r\n            else { \r\n                document.querySelector(\"#hexhelp\").innerText = \"❓\";\r\n            }\r\n        }\r\n        if (e.target.id === \"hslInput\") {\r\n            let tempColor = input.match(/(\\d*\\.{0,1}\\d*)/g);\r\n            if (tempColor) { \r\n                tempColor = tempColor.filter(Boolean); \r\n                if (tempColor[0]<360 && tempColor[1]<=100 && tempColor[2]<=100) {\r\n                    document.querySelector(\"#hslhelp\").innerText = \"❔\";\r\n                    newColor = tempColor.slice(0,3);\r\n                }\r\n                else {\r\n                    document.querySelector(\"#hslhelp\").innerText = \"❓\";\r\n                }\r\n            }\r\n        }\r\n        if (e.target.id === \"rgbInput\") {\r\n            let tempColor = input.match(/\\d{1,3}/g);\r\n            if (tempColor) { \r\n                tempColor = tempColor.filter(Boolean); \r\n                if (tempColor[0]<=255 && tempColor[1]<=255 && tempColor[2]<=255) {\r\n                    document.querySelector(\"#rgblhelp\").innerText = \"❔\";\r\n                    newColor = cConvert.rgb2hsl(...tempColor.slice(0,3));\r\n                }\r\n                else {\r\n                    document.querySelector(\"#rgbhelp\").innerText = \"❓\";\r\n                }\r\n            }\r\n        }\r\n        if (newColor) { this.props.updateBaseColor(newColor); }\r\n    }\r\n\r\n    iFocus = (e) => {\r\n        e.target.select();\r\n        this.buffer = e.target.value;\r\n    }\r\n\r\n    getData = (type) => { \r\n        if (typeof this.colorData[type] === \"function\") { return this.colorData[type]() }\r\n        if (type === \"style\") {\r\n            return ({\r\n                backgroundColor:cConvert.hsl2hex(...this.props.state.baseColor),\r\n                color:(this.props.state.baseColor[2]>45)?\"black\":\"white\",\r\n            });\r\n        }\r\n    }\r\n    updateInputs = () => {\r\n        Object.keys(this.colorData).forEach(e=>{\r\n            document.querySelector(`#${e}Input`).value = this.getData(e)\r\n        })\r\n    }\r\n    copyColor = (e) => {\r\n        document.querySelector(`#${e.target.id.slice(4)}`).select();\r\n        document.execCommand(\"copy\");\r\n        //briefly show the ✔️ emoji in place of the clipboard emoji\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div id=\"colorOutput\" style={this.getData(\"style\")}>\r\n                {Object.keys(this.colorData).map(e=>\r\n                    <p key={e}>\r\n                    <label htmlFor={`${e}Input`}>{e}: \r\n                    <input id={`${e}Input`} type=\"text\" size=\"16\" onChange={this.iChange} onFocus={this.iFocus} onBlur={()=>{this.buffer=\"\"}} style={this.getData(\"style\")} />\r\n                    {/* ❓ ❔ */}\r\n                    <span role=\"img\" arei-label=\"help\" aria-hidden=\"true\" id={`${e}help`} title=\"\">❔</span>\r\n                    <span role=\"img\" arei-label=\"copy\" aria-hidden=\"true\" id={`copy${e}Input`} title=\"copy\" onClick={this.copyColor}>📋</span>\r\n                    </label>\r\n                    </p>\r\n                )}\r\n          </div>\r\n          </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n         this.updateInputs();\r\n    }\r\n    componentDidUpdate() {\r\n        this.updateInputs();\r\n    }\r\n}","import * as cConvert from '../accessories/colorConversion';\r\nexport default class cWheel {\r\n    constructor(width,baseColor,colorCanvas,colorCanvasUI,updateFunction) {\r\n        this.baseColorHSL = baseColor;\r\n        this.h = baseColor[0];\r\n        this.s = baseColor[1];\r\n        this.l = baseColor[2];\r\n        this.baseColorHEX = cConvert.hsl2hex(baseColor);\r\n        this.updateSelectedColor = updateFunction;\r\n        this.colorCanvas = colorCanvas;\r\n        this.colorCanvasUI = colorCanvasUI;\r\n        this.width = width;\r\n        this.height = width; //must be a square\r\n        this.colorCanvas.width = this.width;\r\n        this.colorCanvas.height = this.height;\r\n        this.colorCanvasUI.width = this.width;\r\n        this.colorCanvasUI.height = this.height;\r\n        this.colorCanvasUI.style.position = 'relative';\r\n        this.colorCanvasUI.style.marginLeft = `-${this.width}px`;\r\n        this.colorCanvas.style.zIndex = '0';\r\n        this.colorCanvasUI.style.zIndex = '1';\r\n        this.ctx = this.colorCanvas.getContext(\"2d\");\r\n        this.ctxUI = this.colorCanvasUI.getContext(\"2d\");\r\n        this.outerWheelThickness = this.width/15;\r\n        this.ctx.lineWidth = this.outerWheelThickness;\r\n        this.wheelRadius = (this.width/2)-this.outerWheelThickness/2;\r\n        this.innerRadius = this.wheelRadius - this.outerWheelThickness/2;\r\n        this.outerRadius = this.wheelRadius + this.outerWheelThickness/2;\r\n        this.boxWidth = 2*(this.wheelRadius-(this.outerWheelThickness/2))/Math.sqrt(2)-2;\r\n        this.boxHeight = this.boxWidth;\r\n        this.leftX = (this.width/2)-(this.boxWidth/2);\r\n        this.topY = (this.height/2)-(this.boxHeight/2);\r\n        this.rightX = this.leftX+this.boxWidth;\r\n        this.bottomY = (this.height/2)+(this.boxHeight/2);\r\n        this.calculateWheelSelectorPosition(this.baseColorHSL);\r\n        this.calculateBoxSelectorPosition(this.baseColorHSL);\r\n        this.activeSelector = \"wheel\";\r\n        this.selectedColor = this.baseColorHSL; \r\n        this.selectorLineWidth = Math.ceil(this.outerWheelThickness/12);\r\n        this.textX = this.width/2;\r\n        this.textY = this.bottomY + this.outerWheelThickness*1.2;\r\n        this.selfInvoked = false;\r\n        this.init = (() => { \r\n            this.drawOuterWheel();this.drawInnerBox(); this.drawSelectors();\r\n        })();\r\n    };\r\n    calculateBoxSelectorPosition(color) {\r\n        let x = this.leftX + this.boxWidth * this.l/100;\r\n        let y = this.topY + this.boxHeight * this.s/100;\r\n        this.boxSelector = [x,y];\r\n    }\r\n    calculateWheelSelectorPosition(color) {\r\n        let r = this.wheelRadius;\r\n        let theta = color[0]*Math.PI/180;\r\n        let x = r*Math.cos(theta)+(this.width/2);\r\n        let y = -r*Math.sin(theta)+(this.height/2);\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    drawInnerBox = (baseHue=this.baseColorHSL[0]) => {\r\n        for (let row = this.topY; row <= this.bottomY; row++) { \r\n            let rowPercent = 100*(row-this.topY)/(this.bottomY-this.topY);\r\n            let boxGradient = this.ctx.createLinearGradient(this.leftX,row,this.rightX,row);\r\n            let steps = 10; //ten gradient steps produces good balance of performance and accuracy\r\n            for (let i=0; i<=steps; i++) { \r\n                boxGradient.addColorStop(i/steps,`hsla(${baseHue},${rowPercent}%,${100*i/steps}%,1)`);\r\n            }\r\n            this.ctx.strokeStyle = boxGradient;\r\n            this.ctx.lineWidth = 2;\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.leftX,row);\r\n            this.ctx.lineTo(this.rightX,row);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOuterWheel = (segments=12) => { \r\n        for (let i=0; i<segments; i++) {\r\n            let theta0 = i*360/segments;\r\n            let theta1 = (i+1)*360/segments;\r\n            let rad0 = theta0*Math.PI/180 - .01; // - .01 hides the gaps\r\n            let rad1 = theta1*Math.PI/180;\r\n            let x1 = this.wheelRadius*Math.cos(rad0)+(this.width/2); \r\n            let y1 = this.height - (this.wheelRadius*Math.sin(rad0)+(this.height/2)); \r\n            let x2 = this.wheelRadius*Math.cos(rad1)+(this.width/2);\r\n            let y2 = this.height - (this.wheelRadius*Math.sin(rad1)+(this.height/2));\r\n            let gradient = this.ctx.createLinearGradient(x1,y1,x2,y2); \r\n            gradient.addColorStop(0,`hsla(${theta0},100%,50%,1)`);\r\n            gradient.addColorStop(1,`hsla(${theta1},100%,50%,1)`);\r\n            this.ctx.strokeStyle = gradient;\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(this.width/2,this.height/2,this.wheelRadius,2*Math.PI-(rad0),2*Math.PI-(rad1),true);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOutput = (output) => {\r\n        output.forEach((e,i,a)=>a[i]=Number(a[i]).toFixed(2));\r\n        this.updateSelectedColor(output);\r\n        this.baseColorHEX = cConvert.hsl2hex(...output);\r\n        this.ctxUI.textAlign = 'center';\r\n        this.ctxUI.font = `${this.outerWheelThickness}px monospace`;\r\n        this.ctxUI.fillStyle = 'white';\r\n        this.ctxUI.strokeStyle = 'black';\r\n        this.ctxUI.lineWidth = this.selectorLineWidth+1;\r\n        this.ctxUI.strokeText(this.baseColorHEX, this.textX, this.textY);\r\n        this.ctxUI.fillText(this.baseColorHEX, this.textX, this.textY);\r\n    }\r\n    drawSelectors = () => {\r\n        let selectors = [[this.wheelSelector[0],this.wheelSelector[1]],[this.boxSelector[0],this.boxSelector[1]]];\r\n        this.ctxUI.clearRect(0,0,this.width,this.height);\r\n        selectors.forEach(e=> {\r\n            this.ctxUI.moveTo(e[0],e[1]);\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"#252525\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"white\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30-this.selectorLineWidth,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n        });\r\n        this.drawOutput(this.selectedColor);\r\n    }\r\n    externalInput = (color) => {\r\n        //add color format detection: hex/hsl\r\n        //if (color.match(/^#[0-9a-f]{3,6}$/i)) { color = cConvert.hex2hsl(color); }\r\n        this.h = color[0];\r\n        this.s = color[1];\r\n        this.l = color[2];\r\n        this.baseColorHSL = color;\r\n        this.baseColorHEX = cConvert.hsl2hex(color);\r\n        this.selectedColor = color;\r\n        this.calculateWheelSelectorPosition(color);\r\n        this.calculateBoxSelectorPosition(color);\r\n        this.drawInnerBox(this.baseColorHSL[0]);\r\n        this.drawSelectors();\r\n    }\r\n    getNearestPointInBox = (x,y) => {\r\n        if (x<this.leftX) { this.x = this.leftX };\r\n        if (x>this.rightX) { this.x = this.rightX };\r\n        if (y<this.topY) { this.y = this.topY };\r\n        if (y>this.bottomY) { this.y = this.bottomY };\r\n        this.s = 100*(this.y-this.topY)/(this.bottomY-this.topY);\r\n        this.l = 100*(this.x-this.leftX)/(this.rightX-this.leftX);\r\n        this.boxSelector = [this.x,this.y];\r\n    }\r\n    getNearestPointOnWheel = (x,y,d) => {\r\n        this.h = (180/Math.PI)*Math.atan(y/x);\r\n        if (x < 0) { this.h = this.h + 180; }\r\n        if (y < 0) { this.h = this.h + 360; }\r\n        this.h = 360-this.h;\r\n        if (this.h<0) { this.h = 360+this.h }\r\n        if (this.h===360) { this.h = 0; }\r\n        x = (this.width/2) + this.wheelRadius*x/d;\r\n        y = (this.width/2) + this.wheelRadius*y/d;\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    mouseData = (e) => {\r\n        this.x = e.offsetX;\r\n        this.y = e.offsetY;\r\n        this.xDist = this.x - this.width/2;\r\n        this.yDist = this.y - this.height/2;\r\n        this.dist = Math.sqrt(this.xDist**2 + this.yDist**2);\r\n    }\r\n    mouseDown = (e) => {\r\n        e.preventDefault();\r\n        this.selfInvoked = true;\r\n        this.mouseData(e);\r\n        if (this.dist > this.innerRadius && this.dist < this.outerRadius) { \r\n            this.activeSelector = \"wheel\";\r\n            this.mouseMove(e);\r\n        }\r\n        else if (this.x>this.leftX && this.x<this.rightX && this.y>this.topY && this.y<this.bottomY) { \r\n            this.activeSelector = \"box\";\r\n            this.mouseMove(e);\r\n        }\r\n        else { this.activeSelector = null; }\r\n    }\r\n    mouseMove = (e) => {\r\n        if (e.buttons === 0) { return; }\r\n        this.mouseData(e);\r\n        if (this.activeSelector === \"wheel\") {\r\n            this.getNearestPointOnWheel(this.xDist,this.yDist,this.dist);\r\n            this.drawInnerBox(this.h);\r\n            this.selectedColor = [this.h,this.s,this.l];\r\n            this.drawSelectors();\r\n        }\r\n        if (this.activeSelector === \"box\") { \r\n            this.getNearestPointInBox(this.x,this.y);\r\n            this.selectedColor = [this.h,this.s,this.l];\r\n            this.drawSelectors();\r\n        }\r\n    }\r\n    mouseUp = () => {\r\n        this.updateSelectedColor(this.selectedColor);\r\n        this.selfInvoked = false;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport cWheel from './wheel';\r\n//todo: \"copy\"/\"OK\"/\"close\" buttons\r\n//todo: preview box in top left\r\nexport default class ColorWheel extends Component {\r\n\r\n    updateSelectedColor = (color) => { \r\n        if (color === this.props.state.baseColor) { return; }\r\n        this.props.updateBaseColor(color);\r\n    }\r\n    componentDidUpdate() {\r\n        if(this.colorWheel.selfInvoked === false) {\r\n            this.colorWheel.externalInput(this.props.state.baseColor);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <div id=\"canvasContainer\">\r\n                <canvas id=\"colorCanvas\"></canvas>\r\n                <canvas id=\"colorCanvasUI\"></canvas>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n    componentDidMount() {\r\n        let colorCanvas = document.querySelector(\"#colorCanvas\");\r\n        let colorCanvasUI = document.querySelector(\"#colorCanvasUI\");\r\n        this.colorWheel = new cWheel(this.props.state.width,this.props.state.baseColor,colorCanvas,colorCanvasUI,this.updateSelectedColor);\r\n        colorCanvasUI.addEventListener(\"mousedown\",this.colorWheel.mouseDown);\r\n        colorCanvasUI.addEventListener(\"mousemove\",this.colorWheel.mouseMove);\r\n        colorCanvasUI.addEventListener(\"mouseup\",this.colorWheel.mouseUp);\r\n        //add touchevents!\r\n    }\r\n};\r\n\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport default class HslSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {\r\n            \"h\":359.99,\r\n            \"s\":100,\r\n            \"l\":100\r\n        };\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.props.state.baseColor.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") {return;}\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"[dec]\").replace(/\\./g,\"\").replace(\"[dec]\",\".\").replace(/[^\\d.]/g,\"\");\r\n            if (value >= this.inputs[colorVar]) value = this.inputs[colorVar];\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"hsl\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(newColor);\r\n        }\r\n    }\r\n\r\n    setSliders = () => {\r\n        [\"h\",\"s\",\"l\"].forEach((e,i)=>{\r\n            const value = (e===this.buffer[0]) ? this.buffer[1] : this.props.state.baseColor[i];\r\n            document.querySelector(`#${e}r`).value = Number(value);\r\n            document.querySelector(`#${e}t`).value = value;\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n                <div className=\"colorInputBox\">\r\n                    <p>hue, saturation, luminosity</p>\r\n                {Object.keys(this.inputs).map(e=>\r\n                        <div className=\"colorInputRow\" key={e[0]}>\r\n                        <label htmlFor={`${e}t`}>{e} \r\n                        <input name={`${e}t`} id={`${e}r`}  type=\"range\" min=\"0\" max={this.inputs[e]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e}t`} min=\"0\" max={this.inputs[e]} size=\"4\" onChange={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </label>\r\n                        </div>\r\n                    )\r\n                }\r\n                </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {rgb2hsl,hsl2rgb} from '../accessories/colorConversion';\r\n\r\nexport default class RgbSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {\r\n            \"r\":255,\r\n            \"g\":255,\r\n            \"b\":255,\r\n        };\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.baseColorRGB.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") {return;}\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"\").replace(/[\\D]/g,\"\");\r\n            if (value >= this.inputs[colorVar]) value = this.inputs[colorVar];\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"rgb\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(rgb2hsl(...newColor));\r\n        }\r\n\r\n    }\r\n\r\n    setSliders = () => {\r\n        this.baseColorRGB = hsl2rgb(...this.props.state.baseColor);\r\n        [\"r\",\"g\",\"b\"].forEach((e,i)=>{\r\n            document.querySelector(\"#\"+e+\"r\").value = this.baseColorRGB[i];\r\n            document.querySelector(\"#\"+e+\"t\").value = this.baseColorRGB[i];\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"colorInputBox\">\r\n            <p>red, green, blue</p>\r\n                {Object.keys(this.inputs).map(e=>\r\n                        <div className=\"colorInputRow\" key={e[0]}>\r\n                        <label htmlFor={`${e}t}`}>{e} \r\n                        <input name={`${e}r`} id={`${e}r`}  type=\"range\" min=\"0\" max={this.inputs[e]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e}t`} min=\"0\" max={this.inputs[e]} size=\"4\" onInput={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </label>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport ColorPreview from './components/ColorPreview';\nimport ColorWheel from './components/ColorWheel';\nimport HslSliders from './components/HslSliders';\nimport './ColorTools.css';\nimport RgbSliders from './components/RgbSliders';\nexport default class ColorTools extends Component {\n  constructor(props) {\n    super (props);\n    this.state = { \n      baseColor:[0,100,50],\n      width:300,\n    };\n  }\n  updateBaseColor = (color) => { \n    if (color === this.state.baseColor) { return; }\n    if (color[0] >= 360) { color[0] = 0 }\n    if (color[1] >= 100) { color[1] = 100 }\n    if (color[2] >= 100) { color[2] = 100 }\n    color.forEach((e,i,a)=>a[i]=Number(e));\n    this.textColor = (color[2]>40) ? \"black\" : \"white\";\n    this.setState({baseColor:color});\n  }\n  render() {\n  return (\n    <div id=\"colorToolsFlexContainer\">\n      <div id=\"colorPickers\" style={{width:this.state.width}}>\n        <ColorPreview updateBaseColor={this.updateBaseColor} state={this.state} />\n        <ColorWheel updateBaseColor={this.updateBaseColor} state={this.state} />\n        <HslSliders updateBaseColor={this.updateBaseColor} state={this.state} />\n        <RgbSliders updateBaseColor={this.updateBaseColor} state={this.state} />\n      </div>\n    </div>\n  );\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ColorTools from './ColorTools';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<ColorTools />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}