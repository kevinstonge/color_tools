{"version":3,"sources":["accessories/colorConversion.js","components/ColorPreview.js","components/wheel.js","components/ColorWheel.js","components/HslSliders.js","components/RgbSliders.js","ColorTools.js","serviceWorker.js","index.js"],"names":["rgb2hsl","r","g","b","h","s","l","d","min","max","Math","abs","toFixed","rgb2hex","c","map","item","toString","length","join","toUpperCase","hsl2rgb","x","m","round","hex2rgb","hex","concat","parseInt","substring","hex2hsl","this","apply","Object","toConsumableArray","hsl2hex","ColorPreview","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","iChange","e","persist","input","target","value","newColor","colorTest","id","document","querySelector","innerText","updateBaseColor","iFocus","select","buffer","getData","type","colorData","backgroundColor","cConvert","state","baseColor","color","updateInputs","keys","forEach","copyColor","elementToCopy","replace","copyIconElement","execCommand","setTimeout","hexInput","hslInput","rgbInput","match","tempColor","filter","Boolean","colorHelp","_this2","react_default","a","createElement","style","key","htmlFor","size","onChange","onFocus","onBlur","role","arei-label","aria-hidden","title","onClick","Component","cWheel","width","colorCanvas","colorCanvasUI","updateFunction","drawInnerBox","baseHue","arguments","undefined","baseColorHSL","row","topY","bottomY","rowPercent","boxGradient","ctx","createLinearGradient","leftX","rightX","i","addColorStop","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","drawOuterWheel","segments","theta0","theta1","rad0","PI","rad1","x1","wheelRadius","cos","y1","height","sin","x2","y2","gradient","arc","drawOutput","output","Number","updateSelectedColor","baseColorHEX","ctxUI","textAlign","font","outerWheelThickness","fillStyle","selectorLineWidth","strokeText","textX","textY","fillText","drawSelectors","selectors","wheelSelector","boxSelector","clearRect","selectedColor","externalInput","calculateWheelSelectorPosition","calculateBoxSelectorPosition","getNearestPointInBox","y","getNearestPointOnWheel","atan","mouseData","offsetX","offsetY","xDist","yDist","dist","sqrt","pow","mouseDown","preventDefault","focus","selfInvoked","innerRadius","outerRadius","activeSelector","mouseMove","buttons","mouseUp","position","marginLeft","zIndex","getContext","boxWidth","boxHeight","ceil","init","theta","ColorWheel","colorWheel","Fragment","tabIndex","outline","addEventListener","HslSliders","cFocus","colorVar","substr","cChange","nativeEvent","data","slice","inputType","inputs","indexOf","setSliders","componentDidUpdate","className","name","RgbSliders","baseColorRGB","onInput","ColorTools","textColor","setState","ColorPreview_ColorPreview","ColorWheel_ColorWheel","HslSliders_HslSliders","RgbSliders_RgbSliders","window","location","hostname","ReactDOM","render","ColorTools_ColorTools","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a31299a1.chunk.js","sourcesContent":["export function rgb2hsl (r,g,b) {\r\n    r=r/255; g=g/255; b=b/255;\r\n    let h,s,l,d,min,max = null;\r\n    max=Math.max(r,g,b);\r\n    min=Math.min(r,g,b);\r\n    d=max-min;\r\n    l=(max+min);\r\n    if (max===r) { h = 60*(((g-b)/d)%6); }\r\n    if (max===g) { h = 60*(((b-r)/d)+2); }\r\n    if (max===b) { h = 60*(((r-g)/d)+4); }\r\n    if (d===0) { h=0; s=0; }\r\n    if (h<0) { h=h+360; }\r\n    if (d!==0) { s=d/(1-Math.abs(l-1)); }\r\n    h = h.toFixed(2);\r\n    s = (s*100).toFixed(2);\r\n    l = (l*50).toFixed(2);\r\n    return [h,s,l];\r\n}\r\nexport function rgb2hex (r, g, b) {\r\n    let c = [r,g,b];\r\n    c = \"#\" + c.map(\r\n        function(item){\r\n            return item.toString(16);\r\n        }).map(\r\n        function(item){\r\n            if(item.length===1){return \"0\" + item;}\r\n            else {return(item);}\r\n        }).join(\"\").toUpperCase();\r\n    return c;\r\n}\r\nexport function hsl2rgb (h,s,l) {\r\n    s=s/100;\r\n    l=l/100;\r\n    let c=(1-Math.abs((2*l)-1))*s;\r\n    let x=c*(1-Math.abs(((h/60)%2)-1));\r\n    let m=l-c/2;\r\n    let r,g,b;\r\n    if (h<60|h===360) {r=c;g=x;b=0;}\r\n    else if (h<120)\t{r=x;g=c;b=0}\r\n    else if (h<180)\t{r=0;g=c;b=x}\r\n    else if (h<240) {r=0;g=x;b=c}\r\n    else if (h<300) {r=x;g=0;b=c}\r\n    else if (h<360)\t{r=c;g=0;b=x}\r\n    r=Math.round((r+m)*255);g=Math.round((g+m)*255);b=Math.round((b+m)*255);\r\n    return [r,g,b];\t\r\n}\r\nexport function hex2rgb (hex) {\r\n    hex = (hex[0]===\"#\") ? hex : `#${hex}`;\r\n    let r = parseInt(hex.substring(1,3),16);\r\n    let g = parseInt(hex.substring(3,5),16);\r\n    let b = parseInt(hex.substring(5,7),16);\r\n    return [r,g,b];\r\n}\r\nexport function hex2hsl (hex) {\r\n    return this.rgb2hsl(...this.hex2rgb(hex));\r\n}\r\nexport function hsl2hex(h,s,l) {\r\n\treturn rgb2hex(...hsl2rgb(h,s,l));\r\n}","import React, { Component } from 'react'\r\nimport * as cConvert from '../accessories/colorConversion';\r\n\r\nexport default class ColorPreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buffer=[];\r\n        this.colorData={\r\n            \"hexInput\":()=>cConvert.hsl2hex(...this.props.state.baseColor),\r\n            \"hslInput\":()=>this.props.state.baseColor.join(\", \"),\r\n            \"rgbInput\":()=>cConvert.hsl2rgb(...this.props.state.baseColor).join(\", \")\r\n        };\r\n        this.colorTest={\r\n            \"hexInput\":(input)=>{\r\n                return (input.match(/^#{0,1}[0-9a-f]{6}$/i)) ? cConvert.hex2hsl(input) : null;\r\n            },\r\n            \"hslInput\":(input)=>{\r\n                let tempColor = input.match(/(\\d*\\.{0,1}\\d*)/g);\r\n                tempColor = (tempColor) ? tempColor.filter(Boolean) : \"\"; \r\n                if (tempColor.length===3 && tempColor[0]<360 && tempColor[1]<=100 && tempColor[2]<=100) {\r\n                    return [tempColor[0],tempColor[1],tempColor[2]];\r\n                }\r\n            },\r\n            \"rgbInput\":(input)=>{\r\n                let tempColor = input.match(/\\d{1,3}/g);\r\n                tempColor = (tempColor) ? tempColor.filter(Boolean) : \"\";\r\n                if (tempColor.length===3 && tempColor[0]<=255 && tempColor[1]<=255 && tempColor[2]<=255) {\r\n                    return cConvert.rgb2hsl(tempColor[0],tempColor[1],tempColor[2]);\r\n                }\r\n            }\r\n        }\r\n        this.colorHelp={\r\n            \"hexInput\":\"enter six-digit hexidecimal values with no spaces, # prefix is optional\",\r\n            \"hslInput\":\"enter three values separated by spaces or commas, first value is hue and must be less than 360, second value is saturation and must be less than or equal to 100, third value is luminosity and must be less than or equal to 100. Decimals values can be used\",\r\n            \"rgbInput\":\"enter three values separated by spaces or commas, each value must be less than or equal to 255\"\r\n        }\r\n    } \r\n    iChange = (e) => {\r\n        e.persist();\r\n        let input = e.target.value;\r\n        let newColor = this.colorTest[e.target.id](input);\r\n        if (newColor) {\r\n            document.querySelector(`#${e.target.id}Help`).innerText = \"❔\";\r\n            this.props.updateBaseColor(newColor);\r\n        }\r\n        else {\r\n            document.querySelector(`#${e.target.id}Help`).innerText = \"❓\";\r\n        }\r\n\r\n    }\r\n    iFocus = (e) => {\r\n        e.target.select();\r\n        this.buffer = [e.target.id,e.target.value];\r\n    }\r\n\r\n    getData = (type) => { \r\n        if (typeof this.colorData[type] === \"function\") { return this.colorData[type]() }\r\n        if (type === \"style\") {\r\n            return ({\r\n                backgroundColor:cConvert.hsl2hex(...this.props.state.baseColor),\r\n                color:(this.props.state.baseColor[2]>45)?\"black\":\"white\",\r\n            });\r\n        }\r\n    }\r\n    updateInputs = () => {\r\n        Object.keys(this.colorData).forEach(e=>{\r\n            if (this.buffer[0]!==e) {\r\n                document.querySelector(`#${e}`).value = this.getData(e);\r\n                document.querySelector(`#${e}Help`).innerText = \"❔\";\r\n            }\r\n        })\r\n    }\r\n    copyColor = (e) => {\r\n        let elementToCopy = `#${e.target.id.replace(\"Copy\",\"\")}`;\r\n        let copyIconElement = `#${e.target.id}`;\r\n        document.querySelector(elementToCopy).select();\r\n        document.execCommand(\"copy\");\r\n        document.querySelector(copyIconElement).innerText = \"✔️\";\r\n        setTimeout(()=>{document.querySelector(copyIconElement).innerText = \"📋\"},500);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div id=\"colorOutput\" style={this.getData(\"style\")}>\r\n                {Object.keys(this.colorData).map(e=>\r\n                    <p key={e}>\r\n                    <label htmlFor={e}>{e}: \r\n                    <input id={e} type=\"text\" size=\"16\" onChange={this.iChange} onFocus={this.iFocus} onBlur={()=>{this.buffer=[]}} style={this.getData(\"style\")} />\r\n                    <span role=\"img\" arei-label=\"help\" aria-hidden=\"true\" id={`${e}Help`} title={this.colorHelp[e]}>❔</span>\r\n                    <span role=\"img\" arei-label=\"copy\" aria-hidden=\"true\" id={`${e}Copy`} title=\"copy\" onClick={this.copyColor}>📋</span>\r\n                    </label>\r\n                    </p>\r\n                )}\r\n          </div>\r\n          </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.updateInputs();\r\n    }\r\n    componentDidUpdate() {\r\n        this.updateInputs();\r\n    }\r\n}","import * as cConvert from '../accessories/colorConversion';\r\nexport default class cWheel {\r\n    constructor(width,baseColor,colorCanvas,colorCanvasUI,updateFunction) {\r\n        this.baseColorHSL = baseColor;\r\n        this.h = baseColor[0];\r\n        this.s = baseColor[1];\r\n        this.l = baseColor[2];\r\n        this.baseColorHEX = cConvert.hsl2hex(baseColor);\r\n        this.updateSelectedColor = updateFunction;\r\n        this.colorCanvas = colorCanvas;\r\n        this.colorCanvasUI = colorCanvasUI;\r\n        this.width = width;\r\n        this.height = width; //must be a square\r\n        this.colorCanvas.width = this.width;\r\n        this.colorCanvas.height = this.height;\r\n        this.colorCanvasUI.width = this.width;\r\n        this.colorCanvasUI.height = this.height;\r\n        this.colorCanvasUI.style.position = 'relative';\r\n        this.colorCanvasUI.style.marginLeft = `-${this.width}px`;\r\n        this.colorCanvas.style.zIndex = '0';\r\n        this.colorCanvasUI.style.zIndex = '1';\r\n        this.ctx = this.colorCanvas.getContext(\"2d\");\r\n        this.ctxUI = this.colorCanvasUI.getContext(\"2d\");\r\n        this.outerWheelThickness = this.width/15;\r\n        this.ctx.lineWidth = this.outerWheelThickness;\r\n        this.wheelRadius = (this.width/2)-this.outerWheelThickness/2;\r\n        this.innerRadius = this.wheelRadius - this.outerWheelThickness/2;\r\n        this.outerRadius = this.wheelRadius + this.outerWheelThickness/2;\r\n        this.boxWidth = 2*(this.wheelRadius-(this.outerWheelThickness/2))/Math.sqrt(2)-2;\r\n        this.boxHeight = this.boxWidth;\r\n        this.leftX = (this.width/2)-(this.boxWidth/2);\r\n        this.topY = (this.height/2)-(this.boxHeight/2);\r\n        this.rightX = this.leftX+this.boxWidth;\r\n        this.bottomY = (this.height/2)+(this.boxHeight/2);\r\n        this.calculateWheelSelectorPosition(this.baseColorHSL);\r\n        this.calculateBoxSelectorPosition(this.baseColorHSL);\r\n        this.activeSelector = \"wheel\";\r\n        this.selectedColor = this.baseColorHSL; \r\n        this.selectorLineWidth = Math.ceil(this.outerWheelThickness/12);\r\n        this.textX = this.width/2;\r\n        this.textY = this.bottomY + this.outerWheelThickness*1.2;\r\n        this.selfInvoked = false;\r\n        this.init = (() => { \r\n            this.drawOuterWheel();this.drawInnerBox(); this.drawSelectors();\r\n        })();\r\n    };\r\n    calculateBoxSelectorPosition(color) {\r\n        let x = this.leftX + this.boxWidth * this.l/100;\r\n        let y = this.topY + this.boxHeight * this.s/100;\r\n        this.boxSelector = [x,y];\r\n    }\r\n    calculateWheelSelectorPosition(color) {\r\n        let r = this.wheelRadius;\r\n        let theta = color[0]*Math.PI/180;\r\n        let x = r*Math.cos(theta)+(this.width/2);\r\n        let y = -r*Math.sin(theta)+(this.height/2);\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    drawInnerBox = (baseHue=this.baseColorHSL[0]) => {\r\n        for (let row = this.topY; row <= this.bottomY; row++) { \r\n            let rowPercent = 100*(row-this.topY)/(this.bottomY-this.topY);\r\n            let boxGradient = this.ctx.createLinearGradient(this.leftX,row,this.rightX,row);\r\n            let steps = 10; //ten gradient steps produces good balance of performance and accuracy\r\n            for (let i=0; i<=steps; i++) { \r\n                boxGradient.addColorStop(i/steps,`hsla(${baseHue},${rowPercent}%,${100*i/steps}%,1)`);\r\n            }\r\n            this.ctx.strokeStyle = boxGradient;\r\n            this.ctx.lineWidth = 2;\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.leftX,row);\r\n            this.ctx.lineTo(this.rightX,row);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOuterWheel = (segments=12) => { \r\n        for (let i=0; i<segments; i++) {\r\n            let theta0 = i*360/segments;\r\n            let theta1 = (i+1)*360/segments;\r\n            let rad0 = theta0*Math.PI/180 - .01; // - .01 hides the gaps\r\n            let rad1 = theta1*Math.PI/180;\r\n            let x1 = this.wheelRadius*Math.cos(rad0)+(this.width/2); \r\n            let y1 = this.height - (this.wheelRadius*Math.sin(rad0)+(this.height/2)); \r\n            let x2 = this.wheelRadius*Math.cos(rad1)+(this.width/2);\r\n            let y2 = this.height - (this.wheelRadius*Math.sin(rad1)+(this.height/2));\r\n            let gradient = this.ctx.createLinearGradient(x1,y1,x2,y2); \r\n            gradient.addColorStop(0,`hsla(${theta0},100%,50%,1)`);\r\n            gradient.addColorStop(1,`hsla(${theta1},100%,50%,1)`);\r\n            this.ctx.strokeStyle = gradient;\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(this.width/2,this.height/2,this.wheelRadius,2*Math.PI-(rad0),2*Math.PI-(rad1),true);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOutput = (output) => {\r\n        output.forEach((e,i,a)=>a[i]=Number(a[i]).toFixed(2));\r\n        this.updateSelectedColor(output);\r\n        this.baseColorHEX = cConvert.hsl2hex(...output);\r\n        this.ctxUI.textAlign = 'center';\r\n        this.ctxUI.font = `${this.outerWheelThickness}px monospace`;\r\n        this.ctxUI.fillStyle = 'white';\r\n        this.ctxUI.strokeStyle = 'black';\r\n        this.ctxUI.lineWidth = this.selectorLineWidth+1;\r\n        this.ctxUI.strokeText(this.baseColorHEX, this.textX, this.textY);\r\n        this.ctxUI.fillText(this.baseColorHEX, this.textX, this.textY);\r\n    }\r\n    drawSelectors = () => {\r\n        let selectors = [[this.wheelSelector[0],this.wheelSelector[1]],[this.boxSelector[0],this.boxSelector[1]]];\r\n        this.ctxUI.clearRect(0,0,this.width,this.height);\r\n        selectors.forEach(e=> {\r\n            this.ctxUI.moveTo(e[0],e[1]);\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"#252525\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"white\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30-this.selectorLineWidth,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n        });\r\n        this.drawOutput(this.selectedColor);\r\n    }\r\n    externalInput = (color) => {\r\n        //add color format detection: hex/hsl\r\n        //if (color.match(/^#[0-9a-f]{3,6}$/i)) { color = cConvert.hex2hsl(color); }\r\n        this.h = color[0];\r\n        this.s = color[1];\r\n        this.l = color[2];\r\n        this.baseColorHSL = color;\r\n        this.baseColorHEX = cConvert.hsl2hex(color);\r\n        this.selectedColor = color;\r\n        this.calculateWheelSelectorPosition(color);\r\n        this.calculateBoxSelectorPosition(color);\r\n        this.drawInnerBox(this.baseColorHSL[0]);\r\n        this.drawSelectors();\r\n    }\r\n    getNearestPointInBox = (x,y) => {\r\n        if (x<this.leftX) { this.x = this.leftX };\r\n        if (x>this.rightX) { this.x = this.rightX };\r\n        if (y<this.topY) { this.y = this.topY };\r\n        if (y>this.bottomY) { this.y = this.bottomY };\r\n        this.s = 100*(this.y-this.topY)/(this.bottomY-this.topY);\r\n        this.l = 100*(this.x-this.leftX)/(this.rightX-this.leftX);\r\n        this.boxSelector = [this.x,this.y];\r\n    }\r\n    getNearestPointOnWheel = (x,y,d) => {\r\n        this.h = (180/Math.PI)*Math.atan(y/x);\r\n        if (x < 0) { this.h = this.h + 180; }\r\n        if (y < 0) { this.h = this.h + 360; }\r\n        this.h = 360-this.h;\r\n        if (this.h<0) { this.h = 360+this.h }\r\n        if (this.h===360) { this.h = 0; }\r\n        x = (this.width/2) + this.wheelRadius*x/d;\r\n        y = (this.width/2) + this.wheelRadius*y/d;\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    mouseData = (e) => {\r\n        this.x = e.offsetX;\r\n        this.y = e.offsetY;\r\n        this.xDist = this.x - this.width/2;\r\n        this.yDist = this.y - this.height/2;\r\n        this.dist = Math.sqrt(this.xDist**2 + this.yDist**2);\r\n    }\r\n    mouseDown = (e) => {\r\n        e.preventDefault();\r\n        document.querySelector(\"#colorCanvasUI\").focus();\r\n        this.selfInvoked = true;\r\n        this.mouseData(e);\r\n        if (this.dist > this.innerRadius && this.dist < this.outerRadius) { \r\n            this.activeSelector = \"wheel\";\r\n            this.mouseMove(e);\r\n        }\r\n        else if (this.x>this.leftX && this.x<this.rightX && this.y>this.topY && this.y<this.bottomY) { \r\n            this.activeSelector = \"box\";\r\n            this.mouseMove(e);\r\n        }\r\n        else { this.activeSelector = null; }\r\n    }\r\n    mouseMove = (e) => {\r\n        if (e.buttons === 0) { return; }\r\n        this.mouseData(e);\r\n        if (this.activeSelector === \"wheel\") {\r\n            this.getNearestPointOnWheel(this.xDist,this.yDist,this.dist);\r\n            this.drawInnerBox(this.h);\r\n            this.selectedColor = [this.h,this.s,this.l];\r\n            this.drawSelectors();\r\n        }\r\n        if (this.activeSelector === \"box\") { \r\n            this.getNearestPointInBox(this.x,this.y);\r\n            this.selectedColor = [this.h,this.s,this.l];\r\n            this.drawSelectors();\r\n        }\r\n    }\r\n    mouseUp = () => {\r\n        this.updateSelectedColor(this.selectedColor);\r\n        this.selfInvoked = false;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport cWheel from './wheel';\r\n//todo: \"copy\"/\"OK\"/\"close\" buttons\r\n//todo: preview box in top left\r\nexport default class ColorWheel extends Component {\r\n\r\n    updateSelectedColor = (color) => { \r\n        if (color === this.props.state.baseColor) { return; }\r\n        this.props.updateBaseColor(color);\r\n    }\r\n    componentDidUpdate() {\r\n        if(this.colorWheel.selfInvoked === false) {\r\n            this.colorWheel.externalInput(this.props.state.baseColor);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <div id=\"canvasContainer\">\r\n                <canvas id=\"colorCanvas\"></canvas>\r\n                <canvas id=\"colorCanvasUI\" tabIndex=\"1\" style={{outline:\"none\"}}></canvas>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n    componentDidMount() {\r\n        let colorCanvas = document.querySelector(\"#colorCanvas\");\r\n        let colorCanvasUI = document.querySelector(\"#colorCanvasUI\");\r\n        this.colorWheel = new cWheel(this.props.state.width,this.props.state.baseColor,colorCanvas,colorCanvasUI,this.updateSelectedColor);\r\n        colorCanvasUI.addEventListener(\"mousedown\",this.colorWheel.mouseDown);\r\n        colorCanvasUI.addEventListener(\"mousemove\",this.colorWheel.mouseMove);\r\n        colorCanvasUI.addEventListener(\"mouseup\",this.colorWheel.mouseUp);\r\n        //add touchevents!\r\n    }\r\n};\r\n\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport default class HslSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {\r\n            \"h\":359.99,\r\n            \"s\":100,\r\n            \"l\":100\r\n        };\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.props.state.baseColor.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") {return;}\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"[dec]\").replace(/\\./g,\"\").replace(\"[dec]\",\".\").replace(/[^\\d.]/g,\"\");\r\n            if (value >= this.inputs[colorVar]) value = this.inputs[colorVar];\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"hsl\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(newColor);\r\n        }\r\n    }\r\n\r\n    setSliders = () => {\r\n        [\"h\",\"s\",\"l\"].forEach((e,i)=>{\r\n            const value = (e===this.buffer[0]) ? this.buffer[1] : this.props.state.baseColor[i];\r\n            document.querySelector(`#${e}r`).value = Number(value);\r\n            document.querySelector(`#${e}t`).value = value;\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n                <div className=\"colorInputBox\">\r\n                    <p>hue, saturation, luminosity</p>\r\n                {Object.keys(this.inputs).map(e=>\r\n                        <div className=\"colorInputRow\" key={e[0]}>\r\n                        <label htmlFor={`${e}t`}>{e} \r\n                        <input name={`${e}t`} id={`${e}r`}  type=\"range\" min=\"0\" max={this.inputs[e]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e}t`} min=\"0\" max={this.inputs[e]} size=\"4\" onChange={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </label>\r\n                        </div>\r\n                    )\r\n                }\r\n                </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {rgb2hsl,hsl2rgb} from '../accessories/colorConversion';\r\n\r\nexport default class RgbSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {\r\n            \"r\":255,\r\n            \"g\":255,\r\n            \"b\":255,\r\n        };\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.baseColorRGB.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") {return;}\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"\").replace(/[\\D]/g,\"\");\r\n            if (value >= this.inputs[colorVar]) value = this.inputs[colorVar];\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"rgb\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(rgb2hsl(...newColor));\r\n        }\r\n\r\n    }\r\n\r\n    setSliders = () => {\r\n        this.baseColorRGB = hsl2rgb(...this.props.state.baseColor);\r\n        [\"r\",\"g\",\"b\"].forEach((e,i)=>{\r\n            document.querySelector(\"#\"+e+\"r\").value = this.baseColorRGB[i];\r\n            document.querySelector(\"#\"+e+\"t\").value = this.baseColorRGB[i];\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"colorInputBox\">\r\n            <p>red, green, blue</p>\r\n                {Object.keys(this.inputs).map(e=>\r\n                        <div className=\"colorInputRow\" key={e[0]}>\r\n                        <label htmlFor={`${e}t}`}>{e} \r\n                        <input name={`${e}r`} id={`${e}r`}  type=\"range\" min=\"0\" max={this.inputs[e]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e}t`} min=\"0\" max={this.inputs[e]} size=\"4\" onInput={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </label>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport ColorPreview from './components/ColorPreview';\nimport ColorWheel from './components/ColorWheel';\nimport HslSliders from './components/HslSliders';\nimport './ColorTools.css';\nimport RgbSliders from './components/RgbSliders';\nexport default class ColorTools extends Component {\n  constructor(props) {\n    super (props);\n    this.state = { \n      baseColor:[0,100,50],\n      width:300,\n    };\n  }\n  updateBaseColor = (color) => { \n    if (color === this.state.baseColor) { return; }\n    if (color[0] >= 360) { color[0] = 0 }\n    if (color[1] >= 100) { color[1] = 100 }\n    if (color[2] >= 100) { color[2] = 100 }\n    color.forEach((e,i,a)=>a[i]=Number(e));\n    this.textColor = (color[2]>40) ? \"black\" : \"white\";\n    this.setState({baseColor:color});\n  }\n  render() {\n  return (\n    <div id=\"colorToolsFlexContainer\">\n      <div id=\"colorPickers\" style={{width:this.state.width}}>\n        <ColorPreview updateBaseColor={this.updateBaseColor} state={this.state} />\n        <ColorWheel updateBaseColor={this.updateBaseColor} state={this.state} />\n        <HslSliders updateBaseColor={this.updateBaseColor} state={this.state} />\n        <RgbSliders updateBaseColor={this.updateBaseColor} state={this.state} />\n      </div>\n    </div>\n  );\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ColorTools from './ColorTools';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<ColorTools />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}